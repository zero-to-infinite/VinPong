{"version":3,"file":"static/js/main.dc3845e1.js","mappings":"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","sources":["styles/LoadingStyles.js","screens/Loading.js","components/BottomNav.js","components/TopBar.js","firebaseConfig.js","services/storage.js","styles/HomeStyles.js","screens/Home.js","styles/SearchStyles.js","screens/Search.js","services/firestore_user.js","services/firestore_product.js","styles/AddStyles.js","screens/Add.js","styles/ChatRoomStyles.js","services/firestore_chat.js","screens/ChatRoom.js","styles/StoreStyles.js","screens/Store.js","screens/Chat.js","services/auth.js","styles/SignUpStyles.js","screens/SignUp.js","styles/SignInStyles.js","screens/SignIn.js","styles/InfoStyles.js","screens/Info.js","screens/Detail.js","screens/Products.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { StyleSheet } from \"react-native\";\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: \"white\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  \n    title: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  \n    titleText: {\n      color: \"#91B391\",\n      fontSize: 40,\n      fontWeight: \"600\",\n    },\n\n    titleImg: {\n      height: 120,\n      width: 300,\n    },\n  \n    footer: {\n      marginBottom: 30,\n      alignItems: \"center\",\n    },\n  \n    login: {\n      backgroundColor: \"#91B391\",\n      paddingHorizontal: 35,\n      paddingVertical: 15,\n      borderRadius: 25,\n    },\n  \n    loginText: {\n      color: \"white\",\n      fontSize: 16,\n      fontWeight: \"600\",\n    },\n  \n    signUpText: {\n      textDecorationLine: \"underline\",\n      marginTop: 10,\n    },\n  });\n  \n\nexport default styles;","import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Text, View, TouchableOpacity, Image } from \"react-native\";\nimport styles from \"../styles/LoadingStyles\";\n\nexport default function Loading({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n\n      <TouchableOpacity\n        //onPress={() => navigation.navigate(\"Home\")}\n        style={styles.title}\n      >\n        <Image\n          style={styles.titleImg}\n          source={{\n            uri: \"https://firebasestorage.googleapis.com/v0/b/vinpong-3a05c.appspot.com/o/title3.jpg?alt=media&token=79ad77ee-aa8d-4449-b21d-99ffcc468abf&_gl=1*xuh8sg*_ga*MjAzNjMwMTE2Mi4xNjgzODkxNjAx*_ga_CW55HF8NVT*MTY4NjUwNjUxOC40My4xLjE2ODY1MDcxOTIuMC4wLjA.\",\n          }}\n        />\n      </TouchableOpacity>\n\n      <View style={styles.footer}>\n        <TouchableOpacity\n          style={styles.login}\n          onPress={() => navigation.navigate(\"SignIn\")}\n        >\n          <Text style={styles.loginText}>로그인</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity onPress={() => navigation.navigate(\"SignUp\")}>\n          <Text style={styles.signUpText}>회원가입</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { StyleSheet, View, TouchableOpacity } from \"react-native\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\n\nexport default function BottomNav({ navigation }) {\n  return (\n    <View style={styles.footer}>\n      <TouchableOpacity\n        onPress={() => navigation.navigate(\"Home\")}\n        style={styles.menuIcon}\n      >\n        <Feather name=\"home\" size={28} color=\"white\" />\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate(\"Search\")}\n        style={styles.menuIcon}\n      >\n        <Feather name=\"search\" size={28} color=\"white\" />\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate(\"Add\")}\n        style={styles.menuIcon}\n      >\n        <Feather name=\"plus-circle\" size={28} color=\"white\" />\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate(\"ChatRoom\")}\n        style={styles.menuIcon}\n      >\n        <Feather name=\"message-square\" size={28} color=\"white\" />\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate(\"Store\")}\n        style={styles.menuIcon}\n      >\n        <FontAwesome name=\"user-circle-o\" size={28} color=\"white\" />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  footer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\",\n    backgroundColor: \"#91B391\",\n    paddingBottom: 35,\n    paddingTop: 15,\n  },\n\n  menuIcon: {\n    padding: 3,\n  },\n});\n","import React from \"react\";\nimport { StyleSheet, View, TouchableOpacity } from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n\nexport default function TopBar({ navigation }) {\n  return (\n    <View style={styles.topBar}>\n      <TouchableOpacity\n        onPress={() => navigation.goBack()}\n        style={styles.topBarLeft}\n      >\n        <Icon name=\"angle-left\" size={36} color=\"#91B391\" />\n      </TouchableOpacity>\n      <View style={styles.topBarRight}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"Search\")}\n          style={styles.topIcon}\n        >\n          <Icon name=\"search\" size={26} color=\"#91B391\" />\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => alert(\"알림 기능은 준비 중입니다!\")}\n          style={styles.topIcon}\n        >\n          <Icon name=\"bell\" size={26} color=\"#91B391\" />\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => alert(\"카트 기능은 준비 중입니다!\")}\n          style={styles.topIcon}\n        >\n          <Icon name=\"shopping-basket\" size={26} color=\"#91B391\" />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  topBar: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 50,\n    marginHorizontal: 15,\n  },\n\n  topBarLeft: {\n    marginLeft: 5,\n  },\n\n  topBarRight: {\n    flexDirection: \"row\",\n  },\n\n  topIcon: {\n    padding: 4,\n  },\n});\n","import { initializeApp } from 'firebase/app';\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\n// import {...} from \"firebase/database\";\n// import {...} from \"firebase/functions\";\n\n// Initialize Firebase\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBJ7x9feOKgibIiZVPLWzomdV_lwlWvI-o\",\n    authDomain: \"vinpong-3a05c.firebaseapp.com\",\n    databaseURL: \"https://vinpong-3a05c-default-rtdb.asia-southeast1.firebasedatabase.app\",\n    projectId: \"vinpong-3a05c\",\n    storageBucket: \"vinpong-3a05c.appspot.com\",\n    messagingSenderId: \"1075237189481\",\n    appId: \"1:1075237189481:web:b1af1acff19e3801cc6ff8\",\n    measurementId: \"G-HPP99JEJPM\"\n};\n\nexport const FIREBASE_APP = initializeApp(firebaseConfig);\nexport const FIRESTORE_DB = getFirestore(FIREBASE_APP);\nexport const FIREBASE_AUTH = getAuth(FIREBASE_APP);\nexport const FIREBASE_STORAGE = getStorage(FIREBASE_APP);\n","import { FIREBASE_STORAGE, FIRESTORE_DB } from \"../firebaseConfig\";\nimport { ref, uploadBytes, getDownloadURL, listAll } from \"firebase/storage\";\nimport { getDocs, collection, query, where } from \"firebase/firestore\";\n\n// storage에 이미지를 업로드하는 함수\nexport async function uploadImage(uid, file, name, date) {\n  const filePath = `${uid}/${date}${name}`;\n\n  const storageRef = ref(FIREBASE_STORAGE, filePath);\n\n  try {\n    const response = await fetch(file);\n    const blob = await response.blob();\n    const snapshot = await uploadBytes(storageRef, blob);\n    const downloadURL = await getDownloadURL(snapshot.ref);\n    return downloadURL;\n  } catch (err) {\n    console.log(\"이미지 업로드에 실패하였습니다 :(\");\n  }\n}\n\n// storage에서 모든 이미지 가져오는 함수\nexport async function getAllImages() {\n  const docSnap = await getDocs(collection(FIRESTORE_DB, \"Product\"));\n  const imagesList = [];\n  docSnap.forEach((doc) => {\n    imagesList.push(doc.data().image);\n  });\n  return imagesList;\n}\n\n// 특정한 조건의 상품 이미지들을 가져오는 함수(키워드, 스타일, 카테고리에 따라)\nexport async function getProductsByKeyword(keyword, style, category) {\n  const allProductList = [];\n\n  const productRef = collection(FIRESTORE_DB, \"Product\");\n  if (style.length > 0) {\n    const styleQ = query(\n      productRef,\n      where(\"selectedStyles\", \"array-contains-any\", style)\n    );\n\n    try {\n      const querySnapshot = await getDocs(styleQ);\n      const styleProductList = querySnapshot.docs.map((doc) => {\n        const product = doc.data();\n\n        const productData = {\n          id: doc.id,\n          image: product.image,\n          name: product.name,\n          price: product.price,\n        };\n\n        return productData;\n      });\n\n      allProductList.push(...styleProductList);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  if (category.length > 0) {\n    const categoryQ = query(\n      productRef,\n      where(\"selectedCategories\", \"array-contains-any\", category)\n    );\n\n    try {\n      const querySnapshot = await getDocs(categoryQ);\n      const categoryProductList = querySnapshot.docs.map((doc) => {\n        const product = doc.data();\n\n        const productData = {\n          id: doc.id,\n          image: product.image,\n          name: product.name,\n          price: product.price,\n        };\n\n        return productData;\n      });\n\n      allProductList.push(...categoryProductList);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  // 상품 배열 안에 중복되는 값들을 제거\n  const productList = [...new Set(allProductList.map(JSON.stringify))].map(\n    JSON.parse\n  );\n\n  return productList;\n}\n\n// storage에서 특정 유저가 판매하는 상품의 이미지를 가져오는 함수\nexport async function getImages(uid) {\n  try {\n    // uid가 폴더명인 이미지 폴더를 참조\n    const imagesRef = ref(FIREBASE_STORAGE, `${uid}`);\n    const res = await listAll(imagesRef);\n    // 폴더 내의 모든 이미지들의 다운로드 URL을 가져와 리스트로 반환\n    const promises = res.items.map(async (itemRef) => {\n      const path = itemRef.fullPath;\n      try {\n        const url = await getDownloadURL(ref(FIREBASE_STORAGE, path));\n        return url;\n      } catch (err) {\n        console.log(err);\n        return null;\n      }\n    });\n    // 모든 프로미스가 완료될 때까지 기다린 후 리스트 생성\n    const imagesList = await Promise.all(promises);\n    // url이 null인 값을 리스트에서 제거\n    return imagesList.filter((url) => url !== null);\n  } catch (err) {\n    console.log(err);\n    // 에러가 나면 빈 리스트 반환\n    return [];\n  }\n}\n\n// storage에서 모든 유저의 이미지 가져오는 함수\nexport async function getAllUserImages() {\n  const docSnap = await getDocs(collection(FIRESTORE_DB, \"User\"));\n  const imagesList = [];\n  docSnap.forEach((doc) => {\n    if (doc.data().image) imagesList.push(doc.data().image);\n  });\n\n  return imagesList;\n}\n","import { StyleSheet, Dimensions } from \"react-native\";\n\nconst { width: SCREEN_WIDTH } = Dimensions.get(\"window\");\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n  },\n\n  menuBar: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    marginTop: 50,\n    marginRight: 10,\n  },\n\n  menuIcon: {\n    padding: 3,\n  },\n\n  body: {\n    flex: 1,\n    marginHorizontal: 10,\n    marginVertical: 12,\n  },\n\n  bodyText: {\n    alignSelf: \"flex-start\",\n    marginTop: 20,\n    marginBottom: 5,\n    marginLeft: 10,\n  },\n\n  banner: {\n    alignItems: \"center\",\n    borderColor: \"#669066\",\n    borderWidth: 1,\n    borderRadius: 25,\n    paddingVertical: 100,\n  },\n\n  productContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n\n  product: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"white\",\n    borderWidth: 1,\n    borderRadius: 15,\n    width: (SCREEN_WIDTH - 40) * 0.3,\n    height: (SCREEN_WIDTH - 40) * 0.3,\n    margin: 3,\n  },\n\n  scrollIcon: {\n    width: \"10%\",\n    alignItems: \"center\",\n  },\n\n  weatherBox: {\n    height: 100,\n    width: \"100%\",\n    //backgroundColor: \"pink\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n\n  weatherInner: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n  },\n\n  weatherLeft: {\n    height: 100,\n    width: \"27%\",\n    marginRight: \"1%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#A7BEDA\",\n    borderRadius: 15,\n  },\n\n  weatherRight: {\n    height: 100,\n    width: \"70%\",\n    marginLeft: \"1%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#A7BEDA\",\n    borderWidth: 1,\n    borderRadius: 15,\n  },\n\n  city: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontSize: 12,\n  },\n  weather: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontSize: 12,\n  },\n  temp: {\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontSize: 28,\n  },\n\n  dressText: {\n    color: \"#777\",\n    marginTop: 7,\n  },\n\n  dressIcon: {\n    fontSize: 38,\n  },\n\n  footer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\",\n    backgroundColor: \"#91B391\",\n    paddingBottom: 35,\n    paddingTop: 15,\n  },\n});\n\nexport default styles;\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  ScrollView,\n  Dimensions,\n  Image,\n  ActivityIndicator,\n} from \"react-native\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport BottomNav from \"../components/BottomNav\";\nimport TopBar from \"../components/TopBar\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { getAllImages, getAllUserImages } from \"../services/storage\";\nimport * as Location from \"expo-location\";\nimport styles from \"../styles/HomeStyles\";\n\nconst { width: SCREEN_WIDTH } = Dimensions.get(\"window\");\n\nconst API_KEY = \"9aebfd2a3e3ba2172d0b6aa7582d3ca9\"; // openweathermap api key\n\nexport default function Home({ navigation }) {\n  const [productImages, setProductImages] = useState([]); // 홈에 보일 상품 이미지들\n  const [storeImages, setStoreImages] = useState([]); // 홈에 보일 상점 이미지들\n\n  const [city, setCity] = useState(\"\"); // 현재 위치한 도시\n  const [weather, setWeather] = useState(\"\"); // 오늘 날씨\n  const [temp, setTemp] = useState(\"\"); // 현재 온도\n\n  const [ok, setOk] = useState(true); // 위치 정보 수집 허용 여부\n\n  const recommendDress = (temp, weather) => {\n    if (temp < 5) {\n      var text = \"패딩과 두꺼운 코트, 목도리를 추천합니다 :)\";\n    } else if (5 <= temp && temp < 9) {\n      var text = \"코트, 히트텍, 두꺼운 니트를 추천합니다 :)\";\n    } else if (9 <= temp && temp < 12) {\n      var text = \"트렌치코트, 자켓, 니트를 추천합니다 :)\";\n    } else if (12 <= temp && temp < 17) {\n      var text = \"자켓, 가디건, 조끼를 추천합니다 :)\";\n    } else if (17 <= temp && temp < 20) {\n      var text = \"얇은 니트, 맨투맨, 후드티를 추천합니다 :)\";\n    } else if (20 <= temp && temp < 23) {\n      var text = \"셔츠, 긴팔티, 청바지를 추천합니다 :)\";\n    } else if (23 <= temp && temp < 28) {\n      var text = \"반팔티, 반바지, 얇은 셔츠를 추천합니다 :)\";\n    } else if (28 <= temp) {\n      var text = \"민소매, 반팔, 반바지를 추천합니다 :)\";\n    }\n\n    var weatherLower = weather.toLowerCase();\n\n    if (weatherLower.includes(\"clear\")) {\n      var icon = \"☀️\";\n    } else if (weatherLower.includes(\"rain\")) {\n      var icon = \"🌧️\";\n    } else if (weatherLower.includes(\"cloudes\")) {\n      var icon = \"💨\";\n    } else if (weatherLower.includes(\"thunderstorm\")) {\n      var icon = \"⚡️\";\n    } else if (weatherLower.includes(\"snow\")) {\n      var icon = \"❄️\";\n    } else if (weatherLower.includes(\"mist\")) {\n      var icon = \"🌫️\";\n    } else {\n      var icon = \"☺️\";\n    }\n    return (\n      <View style={styles.weatherInner}>\n        <View style={styles.weatherLeft}>\n          <Text style={styles.city}>{city}</Text>\n          <Text style={styles.weather}>{weather}</Text>\n          <Text style={styles.temp}>{Math.round(temp)}°</Text>\n        </View>\n        <View style={styles.weatherRight}>\n          <Text style={styles.dressIcon}>{icon}</Text>\n          <Text style={styles.dressText}>{text}</Text>\n        </View>\n      </View>\n    );\n  };\n\n  // 현재 유저의 위치 정보를 수집하고 날씨 정보를 가져오는 함수\n  const getWeather = async () => {\n    try {\n      const { granted } = await Location.requestForegroundPermissionsAsync();\n      if (!granted) {\n        setOk(false);\n      }\n      // 현재 위치의 위도, 경도 수집\n      const {\n        coords: { latitude, longitude },\n      } = await Location.getCurrentPositionAsync({ accuracy: 5 });\n      // 위도, 경도를 가지고 주소지로 변환\n      const location = await Location.reverseGeocodeAsync(\n        { latitude, longitude },\n        { useGoogleMaps: false }\n      );\n      setCity(location[0].city);\n      // 날씨 api 가져오기\n      try {\n        const response = await fetch(\n          `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&exclude=alerts&appid=${API_KEY}&units=metric`\n        );\n        const json = await response.json();\n        setWeather(json.weather[0].main);\n        setTemp(json.main.temp);\n      } catch (e) {\n        console.log(e);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  useFocusEffect(\n    React.useCallback(() => {\n      const fetchImages = async () => {\n        try {\n          const productImagesList = await getAllImages();\n          const storeImageList = await getAllUserImages();\n          setProductImages(productImagesList);\n          setStoreImages(storeImageList);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      fetchImages();\n    }, [])\n  );\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n\n      <TopBar navigation={navigation} />\n\n      <View style={styles.body}>\n        <Image\n          source={{\n            uri: \"https://firebasestorage.googleapis.com/v0/b/vinpong-3a05c.appspot.com/o/banner3.jpg?alt=media&token=3401f32e-8f7b-4efc-afcd-8e528485fbf6\",\n          }}\n          style={styles.banner}\n        />\n\n        <View\n          style={styles.weatherBox}\n        >\n          {temp === \"\" ? (\n            <View>\n              <ActivityIndicator color=\"black\" size=\"large\" />\n            </View>\n          ) : (\n            <View>{recommendDress(Math.round(temp), weather)}</View>\n          )}\n        </View>\n\n        <Text style={styles.bodyText}>추천 상품</Text>\n        <View style={styles.productContainer}>\n          <ScrollView pagingEnabled horizontal>\n            {productImages.map((value, key) => (\n              <TouchableOpacity\n                onPress={() => navigation.navigate(\"Detail\", { src: value })}\n                style={styles.product}\n                key={key}\n              >\n                <Image style={styles.product} source={{ uri: value }} />\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            onPress={() => alert(\"오른쪽으로 스크롤을 넘겨보세요!\")}\n            style={styles.scrollIcon}\n          >\n            <AntDesign name=\"rightcircle\" size={24} color=\"#91B391\" />\n          </TouchableOpacity>\n        </View>\n\n        <Text style={styles.bodyText}>인기 상점</Text>\n        <View style={styles.productContainer}>\n          <ScrollView pagingEnabled horizontal>\n            {storeImages.map((value, key) => (\n              <TouchableOpacity\n                onPress={() => navigation.navigate(\"Store\", { src: value })}\n                style={styles.product}\n                key={key}\n              >\n                <Image style={styles.product} source={{ uri: value }} />\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n          <TouchableOpacity\n            onPress={() => alert(\"오른쪽으로 스크롤을 넘겨보세요!\")}\n            style={styles.scrollIcon}\n          >\n            <AntDesign name=\"rightcircle\" size={24} color=\"#91B391\" />\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      <BottomNav navigation={navigation} />\n    </View>\n  );\n}\n","import { StyleSheet } from \"react-native\";\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: \"white\",\n    },\n  \n    searchContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      backgroundColor: \"#91B391\",\n      borderRadius: 30,\n      paddingVertical: 5,\n      paddingHorizontal: 10,\n      marginHorizontal: 20,\n      marginTop: 60,\n      marginBottom: 15,\n    },\n  \n    searchInput: {\n      flex: 1,\n      fontSize: 16,\n      color: \"white\",\n      marginLeft: 10,\n    },\n  \n    icon: {\n      marginLeft: 5,\n    },\n  \n    buttonContainer: {\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginHorizontal: 20,\n    },\n  \n    button: {\n      alignItems: \"center\",\n      width: \"50%\",\n      padding: 15,\n      borderTopRightRadius: 20,\n      borderTopLeftRadius: 20,\n      backgroundColor: \"#91B391\",\n    },\n  \n    selectedButton: {\n      backgroundColor: \"#669066\",\n    },\n  \n    buttonText: {\n      color: \"white\",\n      fontWeight: \"bold\",\n    },\n  \n    optionsContainer: {\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      borderWidth: 1.5,\n      borderColor: \"#91B391\",\n      borderBottomLeftRadius: 20,\n      borderBottomRightRadius: 20,\n      marginHorizontal: 20,\n      marginBottom: 10,\n      padding: 20,\n    },\n  \n    option: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      paddingHorizontal: 10,\n      paddingVertical: 5,\n      borderRadius: 15,\n      borderWidth: 1,\n      borderColor: \"#777\",\n      margin: 5,\n    },\n  \n    selectedOption: {\n      backgroundColor: \"#91B391\",\n      borderColor: \"#91B391\",\n    },\n  \n    selectedItemsContainer: {\n      marginLeft: 20,\n      marginBottom: 20,\n    },\n  \n    selectedItem: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      borderRadius: 15,\n      backgroundColor: \"#91B391\",\n      paddingHorizontal: 10,\n      paddingVertical: 5,\n      marginHorizontal: 5,\n    },\n  \n    selectedItemText: {\n      color: \"black\",\n    },\n  \n    popularContainer: {\n      margin: 20,\n    },\n  \n    popularTitle: {\n      fontSize: 16,\n      fontWeight: \"bold\",\n      marginBottom: 10,\n    },\n  \n    popularItem: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginBottom: 5,\n    },\n  \n    popularRank: {\n      marginRight: 10,\n      color: \"#777\",\n    },\n  \n    popularName: {\n      color: \"#777\",\n    },\n  });\n  \n\nexport default styles;","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n} from \"react-native\";\nimport BottomNav from \"../components/BottomNav\";\nimport styles from \"../styles/SearchStyles\";\nimport { Feather } from \"@expo/vector-icons\";\n\nexport default function Search({ navigation }) {\n  const [keyword, setKeyword] = useState(\"\");\n  const [isStyleOpen, setIsStyleOpen] = useState(true); // 스타일 버튼이 선택된 상태로 시작\n  const [isCategoryOpen, setIsCategoryOpen] = useState(false);\n  const [selectedStyles, setSelectedStyles] = useState([]); // 선택된 스타일 목록\n  const [selectedCategories, setSelectedCategories] = useState([]); // 선택된 카테고리 목록\n\n  /* -----------------------------------태그, 인기 검색어 상수--------------------------------------- */\n  // 스타일 태그\n  const stylesList = [\n    \"Casual\",\n    \"Formal\",\n    \"Sports\",\n    \"Vintage\",\n    \"Romantic\",\n    \"Unique\",\n    \"Travel\",\n    \"Bohemian\",\n    \"Streetwear\",\n    \"Preppy\",\n    \"Chic\",\n    \"Minimalist\",\n    \"Tomboy\",\n    \"Rocker\",\n    \"Safari\",\n  ];\n  //카테고리 태그\n  const categoryList = [\n    \"상의\",\n    \"바지\",\n    \"원피스/치마\",\n    \"신발\",\n    \"악세사리\",\n    \"아우터\",\n    \"언더웨어\",\n    \"스포츠/레저\",\n    \"라이프\",\n    \"뷰티\",\n  ];\n  // 임시 인기 검색어 데이터\n  const popularList = [\n    { id: 1, name: \"운동화\" },\n    { id: 2, name: \"후드티\" },\n    { id: 3, name: \"반팔티\" },\n    { id: 4, name: \"나이키\" },\n    { id: 5, name: \"아디다스\" },\n  ];\n\n  /* -----------------------------------태그 모달 관련 함수--------------------------------------- */\n  // 스타일 탭 눌렀을 때 동작하는 함수\n  const handleStylePress = () => {\n    setIsStyleOpen(true);\n    setIsCategoryOpen(false);\n  };\n  // 카테고리 탭 눌렀을 때 동작하는 함수\n  const handleCategoryPress = () => {\n    setIsCategoryOpen(true);\n    setIsStyleOpen(false);\n  };\n  // 스타일 옵션 눌렀을 때 동작하는 함수\n  const handleStyleOptionPress = (style) => {\n    if (selectedStyles.includes(style)) {\n      // 이미 클릭된 스타일이었으면 selectedStyles 리스트에서 제거\n      setSelectedStyles(\n        selectedStyles.filter((selectedStyle) => selectedStyle !== style)\n      );\n    } else {\n      // 클릭되지 않은 스타일이었으면 selectedStyles 리스트에 추가\n      setSelectedStyles([...selectedStyles, style]);\n    }\n  };\n  // 카테고리 옵션 눌렀을 때 동작하는 함수\n  const handleCategoryOptionPress = (category) => {\n    if (selectedCategories.includes(category)) {\n      setSelectedCategories(\n        selectedCategories.filter(\n          (selectedCategory) => selectedCategory !== category\n        )\n      );\n    } else {\n      setSelectedCategories([...selectedCategories, category]);\n    }\n  };\n  // 선택된 검색 태그를 검색창 밑에 보여주는 컴포넌트\n  const renderSelectedItems = () => {\n    const selectedItems = [...selectedStyles, ...selectedCategories]; // 선택된 스타일 + 카테고리를 담은 리스트\n\n    return (\n      <ScrollView horizontal style={styles.selectedItemsContainer}>\n        {selectedItems.map((item, index) => (\n          <View key={index} style={styles.selectedItem}>\n            <Text style={styles.selectedItemText}>{item}</Text>\n            <TouchableOpacity\n              onPress={() => {\n                // X 버튼 누르면 리스트에서 삭제\n                if (selectedStyles.includes(item)) {\n                  handleStyleOptionPress(item);\n                } else {\n                  handleCategoryOptionPress(item);\n                }\n              }}\n            >\n              <Feather name=\"x\" size={16} color=\"white\" style={styles.icon} />\n            </TouchableOpacity>\n          </View>\n        ))}\n      </ScrollView>\n    );\n  };\n  // 스타일 탭 안에서 스타일 옵션을 보여줌\n  const renderStyleOptions = () => {\n    return (\n      <View style={styles.optionsContainer}>\n        {stylesList.map((style, index) => (\n          <TouchableOpacity\n            key={index}\n            style={[\n              styles.option,\n              selectedStyles.includes(style) ? styles.selectedOption : null, // 선택됐으면 옵션 색깔 변경\n            ]}\n            onPress={() => handleStyleOptionPress(style)}\n          >\n            <Text>{style}</Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n    );\n  };\n  // 카테고리 탭 안에서 카테고리 옵션을 보여줌\n  const renderCategoryOptions = () => {\n    return (\n      <View style={styles.optionsContainer}>\n        {categoryList.map((category, index) => (\n          <TouchableOpacity\n            key={index}\n            style={[\n              styles.option,\n              selectedCategories.includes(category)\n                ? styles.selectedOption\n                : null, // 선택됐으면 옵션 색깔 변경\n            ]}\n            onPress={() => handleCategoryOptionPress(category)}\n          >\n            <Text>{category}</Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n    );\n  };\n  /* -----------------------------------검색하는 함수--------------------------------------- */\n  const search = () => {\n    navigation.navigate(\"Products\", {\n      keyword: keyword,\n      style: selectedStyles,\n      category: selectedCategories,\n    });\n  };\n\n  /* -----------------------------------여기서 컴포넌트 구현 시작--------------------------------------- */\n  return (\n    <View style={styles.container}>\n      <StatusBar backgroundColor=\"auto\" />\n\n      {/* 검색창 */}\n      <View style={styles.searchContainer}>\n        <TextInput\n          value={keyword}\n          onChangeText={setKeyword}\n          returnKeyType=\"done\"\n          style={styles.searchInput}\n          placeholder=\"검색어를 입력하세요\"\n          blurOnSubmit={true}\n        />\n        <TouchableOpacity onPress={search}>\n          <Feather name=\"search\" size={24} color=\"white\" style={styles.icon} />\n        </TouchableOpacity>\n      </View>\n\n      {/* 검색창 밑에 선택된 태그들 보여줌! */}\n      <View>{renderSelectedItems()}</View>\n\n      {/* 스타일-카테고리 탭 전환 버튼 (이 아래로 스크롤 뷰) */}\n      <ScrollView>\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity\n            style={[styles.button, isStyleOpen && styles.selectedButton]}\n            onPress={handleStylePress}\n          >\n            <Text style={styles.buttonText}>Style</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={[styles.button, isCategoryOpen && styles.selectedButton]}\n            onPress={handleCategoryPress}\n          >\n            <Text style={styles.buttonText}>Category</Text>\n          </TouchableOpacity>\n        </View>\n\n        {/* 스타일-카테고리 탭 내부에서 보여주는 옵션들 */}\n        {isStyleOpen && renderStyleOptions()}\n        {isCategoryOpen && renderCategoryOptions()}\n\n        {/* 인기 검색어 */}\n        <View style={styles.popularContainer}>\n          <Text style={styles.popularTitle}>인기 검색어</Text>\n          {popularList.map((keyword, index) => (\n            <View key={index} style={styles.popularItem}>\n              <Text style={styles.popularRank}>{index + 1}</Text>\n              <Text style={styles.popularName}>{keyword.name}</Text>\n            </View>\n          ))}\n        </View>\n      </ScrollView>\n\n      <BottomNav navigation={navigation} />\n    </View>\n  );\n}\n","import { FIRESTORE_DB, FIREBASE_AUTH } from \"../firebaseConfig\";\nimport {\n  doc,\n  getDocs,\n  getDoc,\n  collection,\n  updateDoc,\n  query,\n  where,\n} from \"firebase/firestore\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { uploadImage } from \"./storage\";\n\n// 로그인한 유저의 uid 가져오기\nexport async function getUserUid() {\n  return new Promise((resolve, reject) => {\n    onAuthStateChanged(FIREBASE_AUTH, (user) => {\n      if (user) {\n        try {\n          resolve(user.uid);\n        } catch (error) {\n          reject(error);\n        }\n      }\n    });\n  });\n}\n\n// 로그인한 유저의 정보 가져오기\nexport async function getUserInfo() {\n  return new Promise((resolve, reject) => {\n    onAuthStateChanged(FIREBASE_AUTH, async (user) => {\n      if (user) {\n        try {\n          // 현재 로그인한 유저의 uid와 이름이 동일한 문서를 가져옴\n          const userData = await getDoc(doc(FIRESTORE_DB, \"User\", user.uid));\n          // 가져온 문서에서 유저 정보를 읽음\n          const userInfo = userData.data();\n          resolve(userInfo);\n        } catch (error) {\n          reject(error);\n        }\n      }\n    });\n  });\n}\n\n// 특정 유저의 정보 가져오기\nexport async function getUserInfoByUid(uid) {\n  try {\n    const userData = await getDoc(doc(FIRESTORE_DB, \"User\", uid));\n    // 가져온 문서에서 유저 정보를 읽음\n    const userInfo = userData.data();\n    return userInfo;\n  } catch (error) {\n    console.log(err);\n  }\n}\n\n// 내 프로필 정보 DB에 업데이트\nexport async function updateUserInfo(image, name, style, bio) {\n  try {\n    const uid = await getUserUid();\n    const userRef = doc(FIRESTORE_DB, \"User\", uid);\n\n    if (image) {\n      const date = new Date();\n\n      const downloadURL = await uploadImage(\"User\", image, uid, \"image\");\n      console.log(\"유저 이미지 저장 성공!\");\n\n      await updateDoc(userRef, {\n        image: downloadURL,\n        name: name,\n        style: style,\n        bio: bio,\n      });\n    } else {\n      await updateDoc(userRef, {\n        image: null,\n        name: name,\n        style: style,\n        bio: bio,\n      });\n    }\n  } catch (err) {\n    console.log(err);\n  }\n  alert(\"프로필이 성공적으로 변경되었습니다!\");\n}\n\n// 이미지를 클릭하면 특정 유저의 정보 가져옴\nexport async function getUserByImg(src) {\n  const userRef = collection(FIRESTORE_DB, \"User\");\n  const q = query(userRef, where(\"image\", \"==\", src));\n  try {\n    const querySnapshot = await getDocs(q);\n    const userPromises = querySnapshot.docs.map((doc) => {\n      const user = doc.data();\n      const userInfo = {\n        uid: doc.id, // 판매자의 uid\n        name: user.name,\n        bio: user.bio,\n        style: user.style,\n      };\n      return userInfo;\n    });\n    const users = await Promise.all(userPromises);\n    return users[0];\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import { FIRESTORE_DB } from \"../firebaseConfig\";\nimport { addDoc, collection, getDocs, query, where } from \"firebase/firestore\";\nimport { uploadImage } from \"./storage\";\nimport { getUserUid } from \"../services/firestore_user\";\n\n// firestore에 상품 판매 정보 추가\nexport async function addProduct(\n  name,\n  price,\n  condition,\n  size,\n  selectedCategories,\n  selectedStyles,\n  detail,\n  image,\n  navigation\n) {\n  if (name == \"\") {\n    alert(\"상품명을 입력해주세요!\");\n  } else if (price == 0) {\n    alert(\"가격을 입력해주세요!\");\n  } else if (condition == \"\") {\n    alert(\"상태를 체크해주세요!\");\n  } else if (size == \"\") {\n    alert(\"사이즈를 체크해주세요!\");\n  } else {\n    try {\n      const uid = await getUserUid();\n      const numericPrice = parseInt(price);\n\n      const date = new Date();\n      const downloadURL = await uploadImage(uid, image, name, date);\n\n      await addDoc(collection(FIRESTORE_DB, \"Product\"), {\n        uid: uid,\n        name: name,\n        price: numericPrice,\n        condition: condition,\n        size: size,\n        selectedCategories: selectedCategories,\n        selectedStyles: selectedStyles,\n        detail: detail,\n        date: date, // 작성한 날짜와 시각\n        image: downloadURL,\n      });\n\n      alert(`${name}\\n판매글이 성공적으로 게시되었습니다!`);\n      navigation.navigate(\"Store\");\n    } catch (err) {\n      alert(\"올바르지 않은 접근입니다.\\n로그인 후 다시 시도해주세요 :(\");\n      navigation.navigate(\"Loading\");\n      console.log(err);\n    }\n  }\n}\n\n// firestore에서 특정한 상품 정보 가져오기\nexport async function getProduct(src) {\n  const productRef = collection(FIRESTORE_DB, \"Product\");\n  const q = query(productRef, where(\"image\", \"==\", src));\n  try {\n    const querySnapshot = await getDocs(q);\n    const productPromises = querySnapshot.docs.map((doc) => {\n      const product = doc.data();\n      const productInfo = {\n        uid: product.uid, // 판매자의 uid\n        name: product.name,\n        price: product.price,\n        condition: product.condition,\n        size: product.size,\n        category: product.selectedCategories,\n        style: product.selectedStyles,\n        detail: product.detail,\n      };\n      return productInfo;\n    });\n    const products = await Promise.all(productPromises);\n    return products[0];\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import { StyleSheet } from \"react-native\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    justifyContent: \"space-between\",\n  },\n\n  menuBar: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 50,\n    marginHorizontal: 20,\n  },\n\n  menuIcon: {\n    padding: 3,\n  },\n\n  menuText: {\n    fontSize: 17,\n  },\n\n  body: {\n    flex: 1,\n    marginVertical: 20,\n  },\n\n  pic: {\n    position: \"relative\", // 사진 삭제 버튼 겹치게 하기 위함\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    borderColor: \"black\",\n    borderWidth: 1,\n    borderRadius: 15,\n    width: 200, // 항상 고정된 크기\n    height: 200,\n  },\n\n  deletePic: {\n    position: \"absolute\", // 부모 컴포넌트 내에서 절대적 위치 지정\n    backgroundColor: \"#91B391\",\n    borderColor: \"#91B391\",\n    borderWidth: 1,\n    borderRadius: 20,\n    padding: 5,\n    bottom: -10,\n    right: -10,\n  },\n\n  inputBox: {\n    width: \"95%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 12,\n  },\n\n  labelBox: {\n    alignItems: \"center\",\n    width: 65,\n  },\n\n  input: {\n    flex: 1,\n    borderColor: \"white\",\n    borderBottomColor: \"black\",\n    borderWidth: 1,\n    marginRight: 15,\n  },\n\n  inputAreaBox: {\n    flex: 1, // 세로로 flexible\n    width: \"95%\",\n    flexDirection: \"row\",\n    marginVertical: 12,\n  },\n\n  inputArea: {\n    flex: 1,\n    height: 180,\n    borderColor: \"black\",\n    borderWidth: 1,\n    borderRadius: 10,\n    marginRight: 10,\n    padding: 5,\n  },\n\n  checkbox: {\n    flex: 1,\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n  },\n\n  addTagBtn: {\n    backgroundColor: \"#669066\",\n    borderRadius: 15,\n    paddingHorizontal: 20,\n    paddingVertical: 6,\n  },\n\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n\n  modalInner: {\n    borderColor: \"#91B391\",\n    borderWidth: 1,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    width: 340,\n  },\n\n  modalHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#91B391\",\n    padding: 15,\n    borderTopRightRadius: 15,\n    borderTopLeftRadius: 15,\n  },\n\n  selectedItemsContainer: {\n    marginLeft: 5,\n  },\n\n  selectedItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 15,\n    backgroundColor: \"#91B391\",\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    marginHorizontal: 5,\n  },\n\n  selectedItemText: {\n    color: \"black\",\n  },\n\n  footer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\",\n    backgroundColor: \"#91B391\",\n    paddingBottom: 35,\n    paddingTop: 15,\n  },\n\n  hr: {\n    marginVertical: 10,\n  },\n\n  icon: {\n    marginLeft: 5,\n  },\n\n  // 모달 안에 있는 태그들에 관한 스타일\n  modalItemContainer: {\n    padding: 30,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n\n  modalItem: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: \"#777\",\n    margin: 5,\n  },\n\n  selectedModalItem: {\n    backgroundColor: \"#91B391\",\n    borderColor: \"#91B391\",\n  },\n\n  selectionText: {\n    color: \"black\",\n    alignSelf: \"center\",\n    marginBottom: 20,\n  },\n\n  maxSelectionText: {\n    color: \"red\",\n    alignSelf: \"center\",\n    marginBottom: 20,\n  },\n\n  footerLeft: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    marginLeft: 20,\n  },\n\n  detailIcon: {\n    paddingHorizontal: 5,\n  },\n\n  priceBox: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  priceText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 18,\n  },\n\n  chatBtn: {\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    paddingVertical: 7.5,\n    paddingHorizontal: 20,\n    marginRight: 20,\n  },\n\n  chatText: {\n    color: \"#91B391\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n});\n\nexport default styles;\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  Dimensions,\n  TextInput,\n  ScrollView,\n  Modal,\n  ActivityIndicator,\n} from \"react-native\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport BouncyCheckboxGroup, {\n  ICheckboxButton,\n} from \"react-native-bouncy-checkbox-group\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport BottomNav from \"../components/BottomNav\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { addProduct } from \"../services/firestore_product\";\nimport styles from \"../styles/AddStyles\";\n\nconst { width: SCREEN_WIDTH } = Dimensions.get(\"window\");\n\nexport default function Add({ navigation }) {\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [condition, setCondition] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [detail, setDetail] = useState(\"\");\n  const [image, setImage] = useState(null);\n  // 선택된 스타일 태그들\n  const [selectedStyles, setSelectedStyles] = useState([]);\n  // 선택된 카테고리 태그들\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  // 스타일 모달이 보이는지 여부\n  const [styleModalVisible, setStyleModalVisible] = useState(false);\n  // 카테고리 모달이 보이는지 여부\n  const [categoryModalVisible, setCategoryModalVisible] = useState(false);\n\n  const [isLoading, setIsLoading] = useState(false); // 상품 추가시 로딩 여부\n\n  // 스타일 태그\n  const stylesList = [\n    \"Casual\",\n    \"Formal\",\n    \"Sports\",\n    \"Vintage\",\n    \"Romantic\",\n    \"Unique\",\n    \"Travel\",\n    \"Bohemian\",\n    \"Streetwear\",\n    \"Preppy\",\n    \"Chic\",\n    \"Minimalist\",\n    \"Tomboy\",\n    \"Rocker\",\n    \"Safari\",\n  ];\n  // 카테고리 태그\n  const categoryList = [\n    \"상의\",\n    \"바지\",\n    \"원피스/치마\",\n    \"신발\",\n    \"악세사리\",\n    \"아우터\",\n    \"언더웨어\",\n    \"스포츠/레저\",\n    \"라이프\",\n    \"뷰티\",\n  ];\n\n  const checkboxStyles = {\n    fillColor: \"#91B391\",\n    unfillColor: \"white\",\n    textStyle: {\n      textDecorationLine: \"none\",\n    },\n  };\n\n  const conditionCheckboxGroup = [\n    {\n      id: 0,\n      text: \"최상\",\n      ...checkboxStyles,\n    },\n    {\n      id: 1,\n      text: \"상\",\n      ...checkboxStyles,\n    },\n    {\n      id: 2,\n      text: \"중\",\n      ...checkboxStyles,\n    },\n    {\n      id: 3,\n      text: \"하\",\n      ...checkboxStyles,\n    },\n  ];\n\n  const sizeCheckboxGroup = [\n    {\n      id: 0,\n      text: \"L\",\n      ...checkboxStyles,\n    },\n    {\n      id: 1,\n      text: \"M\",\n      ...checkboxStyles,\n    },\n    {\n      id: 2,\n      text: \"S\",\n      ...checkboxStyles,\n    },\n  ];\n\n  // 이미지 추가하는 함수\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0.2,\n    });\n\n    if (!result.canceled) {\n      setImage(result.assets[0].uri);\n    }\n  };\n\n  const deleteImage = async () => {\n    if (image) {\n      setImage(null);\n    }\n  };\n\n  const complete = async () => {\n    if (!isLoading) {\n      setIsLoading(true);\n      await addProduct(\n        name,\n        price,\n        condition,\n        size,\n        selectedCategories,\n        selectedStyles,\n        detail,\n        image,\n        navigation\n      );\n      setTimeout(() => setIsLoading(false), 1000);\n    }\n  };\n\n  // 스타일 태그 눌렀을 때 동작하는 함수\n  const handleStyleTagPress = (style) => {\n    if (selectedStyles.includes(style)) {\n      // 이미 클릭된 스타일이었으면 selectedStyles 리스트에서 제거\n      setSelectedStyles(\n        selectedStyles.filter((selectedStyle) => selectedStyle !== style)\n      );\n    } else {\n      // 클릭되지 않은 스타일이었으면 selectedStyles 리스트에 추가\n      setSelectedStyles([...selectedStyles, style]);\n    }\n  };\n  // 카테고리 태그 눌렀을 때 동작하는 함수\n  const handleCategoryTagPress = (category) => {\n    if (selectedCategories.includes(category)) {\n      // 이미 클릭된 카테고리였으면 selectedCategories 리스트에서 제거\n      setSelectedCategories(\n        selectedCategories.filter(\n          (selectedCategory) => selectedCategory !== category\n        )\n      );\n    } else {\n      // 클릭되지 않은 카테고리였으면 selectedCategories 리스트에 추가\n      setSelectedCategories([...selectedCategories, category]);\n    }\n  };\n\n  // 선택된 스타일 태그를 나타냄\n  const renderSelectedStyles = () => {\n    return (\n      <ScrollView horizontal style={styles.selectedItemsContainer}>\n        {selectedStyles.map((item, index) => (\n          <View key={index} style={styles.selectedItem}>\n            <Text style={styles.selectedItemText}>{item}</Text>\n            <TouchableOpacity\n              onPress={() => {\n                handleStyleTagPress(item);\n              }}\n            >\n              <Feather name=\"x\" size={16} color=\"white\" style={styles.icon} />\n            </TouchableOpacity>\n          </View>\n        ))}\n      </ScrollView>\n    );\n  };\n  // 선택된 카테고리 태그를 나타냄\n  const renderSelectedCategories = () => {\n    return (\n      <ScrollView horizontal style={styles.selectedItemsContainer}>\n        {selectedCategories.map((item, index) => (\n          <View key={index} style={styles.selectedItem}>\n            <Text style={styles.selectedItemText}>{item}</Text>\n            <TouchableOpacity\n              onPress={() => {\n                handleCategoryTagPress(item);\n              }}\n            >\n              <Feather name=\"x\" size={16} color=\"white\" style={styles.icon} />\n            </TouchableOpacity>\n          </View>\n        ))}\n      </ScrollView>\n    );\n  };\n\n  // 모달 내에서 스타일 태그들을 보여줄 함수\n  const renderStyleTagButtons = () => {\n    return (\n      <View style={styles.modalItemContainer}>\n        {stylesList.map((style) => (\n          <TouchableOpacity\n            onPress={() => handleStyleTagPress(style)}\n            key={style}\n            style={[\n              styles.modalItem,\n              selectedStyles.includes(style) ? styles.selectedModalItem : null, // 선택됐으면 옵션 색깔 변경\n            ]}\n          >\n            <Text>{style}</Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n    );\n  };\n\n  // 모달 내에서 카테고리 태그들을 보여줄 함수\n  const renderCategoryTagButtons = () => {\n    return (\n      <View style={styles.modalItemContainer}>\n        {categoryList.map((category) => (\n          <TouchableOpacity\n            onPress={() => handleCategoryTagPress(category)}\n            key={category}\n            style={[\n              styles.modalItem,\n              selectedCategories.includes(category)\n                ? styles.selectedModalItem\n                : null, // 선택됐으면 옵션 색깔 변경\n            ]}\n          >\n            <Text>{category}</Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n\n      <View style={styles.menuBar}>\n        <TouchableOpacity\n          onPress={() => navigation.goBack()}\n          style={styles.menuIcon}\n        >\n          <AntDesign name=\"close\" size={28} color=\"black\" />\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.menuIcon}>\n          {/*완료 누르면 내 상점으로 이동하도록 추후 변경*/}\n          <Text onPress={complete} style={styles.menuText}>\n            완료\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {isLoading ? (\n        <ActivityIndicator color=\"black\" size=\"large\" />\n      ) : (\n        <KeyboardAwareScrollView>\n          <ScrollView style={styles.body}>\n            {image == null ? (\n              <View style={styles.pic}>\n                <TouchableOpacity onPress={pickImage}>\n                  <Feather name=\"camera\" size={18} color=\"black\" />\n                </TouchableOpacity>\n              </View>\n            ) : (\n              <View style={styles.pic}>\n                {image && <Image source={{ uri: image }} style={styles.pic} />}\n                <TouchableOpacity\n                  onPress={deleteImage}\n                  style={styles.deletePic}\n                >\n                  <AntDesign name=\"close\" size={18} color=\"white\" />\n                </TouchableOpacity>\n              </View>\n            )}\n\n            <View style={styles.hr} />\n\n            <View style={styles.inputBox}>\n              <View style={styles.labelBox}>\n                <Text style={styles.label}>상품명</Text>\n              </View>\n              <TextInput\n                onChangeText={setName}\n                value={name}\n                returnKeyType=\"done\"\n                style={styles.input}\n              />\n            </View>\n\n            <View style={styles.inputBox}>\n              <View style={styles.labelBox}>\n                <Text style={styles.label}>가격</Text>\n              </View>\n              <TextInput\n                onChangeText={setPrice}\n                value={price}\n                keyboardType=\"number-pad\"\n                returnKeyType=\"done\"\n                style={styles.input}\n              />\n            </View>\n\n            <View style={styles.inputBox}>\n              <View style={styles.labelBox}>\n                <Text style={styles.label}>상태</Text>\n              </View>\n              <BouncyCheckboxGroup\n                onChange={(ICheckboxButton) => {\n                  setCondition(ICheckboxButton.text);\n                }}\n                data={conditionCheckboxGroup}\n                style={styles.checkbox}\n              />\n            </View>\n\n            <View style={styles.inputBox}>\n              <View style={styles.labelBox}>\n                <Text style={styles.label}>사이즈</Text>\n              </View>\n              <BouncyCheckboxGroup\n                onChange={(ICheckboxButton) => {\n                  setSize(ICheckboxButton.text);\n                }}\n                data={sizeCheckboxGroup}\n                style={styles.checkbox}\n              />\n            </View>\n\n            <View style={styles.inputBox}>\n              <View style={styles.labelBox}>\n                <Text style={styles.label}>카테고리</Text>\n              </View>\n\n              <TouchableOpacity\n                onPress={() => setCategoryModalVisible(true)}\n                style={styles.addTagBtn}\n              >\n                <AntDesign name=\"plus\" size={16} color=\"white\" />\n              </TouchableOpacity>\n              {/* 선택한 카테고리 태그들을 나열해서 보여줌 */}\n              <View>{renderSelectedCategories()}</View>\n              {/* 카테고리 태그 선택하는 모달 */}\n              <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={categoryModalVisible}\n                onRequestClose={() => setCategoryModalVisible(false)}\n              >\n                <View style={styles.modalContainer}>\n                  <View style={styles.modalInner}>\n                    <View style={styles.modalHeader}>\n                      <Text>카테고리 태그</Text>\n                      <TouchableOpacity\n                        onPress={() => {\n                          if (selectedCategories.length <= 2)\n                            setCategoryModalVisible(false);\n                        }}\n                      >\n                        <Text style={styles.closeModalButtonText}>완료</Text>\n                      </TouchableOpacity>\n                    </View>\n                    {renderCategoryTagButtons()}\n                    {selectedCategories.length > 2 ? (\n                      <Text style={styles.maxSelectionText}>\n                        최대 2개의 카테고리 태그를 선택할 수 있습니다!\n                      </Text>\n                    ) : (\n                      <Text style={styles.selectionText}>\n                        상품의 카테고리 태그를 선택해주세요!\n                      </Text>\n                    )}\n                  </View>\n                </View>\n              </Modal>\n            </View>\n\n            <View style={styles.inputBox}>\n              <View style={styles.labelBox}>\n                <Text style={styles.label}>스타일</Text>\n              </View>\n\n              <TouchableOpacity\n                onPress={() => setStyleModalVisible(true)}\n                style={styles.addTagBtn}\n              >\n                <AntDesign name=\"plus\" size={16} color=\"white\" />\n              </TouchableOpacity>\n              {/* 선택한 스타일 태그들을 나열해서 보여줌 */}\n              <View>{renderSelectedStyles()}</View>\n              {/* 스타일 태그 선택하는 모달 */}\n              <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={styleModalVisible}\n                onRequestClose={() => setStyleModalVisible(false)}\n              >\n                <View style={styles.modalContainer}>\n                  <View style={styles.modalInner}>\n                    <View style={styles.modalHeader}>\n                      <Text>스타일 태그</Text>\n                      <TouchableOpacity\n                        onPress={() => {\n                          if (selectedStyles.length <= 3)\n                            setStyleModalVisible(false);\n                        }}\n                      >\n                        <Text style={styles.closeModalButtonText}>완료</Text>\n                      </TouchableOpacity>\n                    </View>\n                    {renderStyleTagButtons()}\n                    {selectedStyles.length > 3 ? (\n                      <Text style={styles.maxSelectionText}>\n                        최대 3개의 스타일 태그를 선택할 수 있습니다!\n                      </Text>\n                    ) : (\n                      <Text style={styles.selectionText}>\n                        상품의 스타일 태그를 선택해주세요!\n                      </Text>\n                    )}\n                  </View>\n                </View>\n              </Modal>\n            </View>\n\n            {/*키보드가 input을 가리는 버그 해결 필요!*/}\n            <View style={styles.inputAreaBox}>\n              <View style={styles.labelBox}>\n                <Text style={styles.label}>상세 설명</Text>\n              </View>\n              <TextInput\n                onChangeText={setDetail}\n                value={detail}\n                multiline={true}\n                placeholder=\"상세 설명을 적어주세요 :D\"\n                returnKeyType=\"done\"\n                blurOnSubmit={true}\n                style={styles.inputArea}\n              />\n            </View>\n          </ScrollView>\n        </KeyboardAwareScrollView>\n      )}\n\n      <BottomNav navigation={navigation} />\n    </View>\n  );\n}\n","import { StyleSheet } from \"react-native\";\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: \"#fff\",\n    },\n  \n    header: {\n      borderBottomWidth: 1,\n      borderBottomColor: \"lightgray\",\n      paddingBottom: 12,\n    },\n  \n    body: {\n      flex: 1,\n      backgroundColor: \"white\",\n      marginHorizontal: 10,\n    },\n  \n    chatContainer: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      paddingVertical: 16,\n      borderBottomColor: \"lightgray\",\n      borderBottomWidth: 1,\n    },\n  \n    chatImage: {\n      backgroundColor: \"#91B391\", // 이미지 위치 확인 위해 임시로 배경색 지정\n      width: 50,\n      height: 50,\n      borderRadius: 20,\n      marginHorizontal: 16,\n    },\n  \n    chatInfoContainer: {\n      flex: 1,\n      justifyContent: \"center\",\n      marginLeft: 5,\n    },\n  \n    chatTitleContainer: {\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginBottom: 4,\n    },\n  \n    chatTitle: {\n      flex: 1,\n      fontWeight: \"bold\",\n      fontSize: 16,\n    },\n  \n    chatName: {\n      color: \"#999\",\n      marginRight: 18,\n    },\n  \n    chatLastMessage: {\n      color: \"#666\",\n    },\n  });\n  \n\nexport default styles;","import { FIRESTORE_DB } from \"../firebaseConfig\";\nimport {\n  addDoc,\n  collection,\n  getDocs,\n  query,\n  where,\n} from \"firebase/firestore\";\nimport { getUserUid, getUserInfo, getUserInfoByUid } from \"../services/firestore_user\";\n\n// 채팅방을 생성하여 DB에 저장\nexport async function addChatRoom(src, name, seller, navigation) {\n  const uid = await getUserUid();\n  const myInfo = await getUserInfo();\n  const sellerInfo = await getUserInfoByUid(seller);\n\n  const chatRoomData = {\n    productImage: src,\n    productName: name,\n    participant: [seller, uid],\n    participantName: [myInfo.name, sellerInfo.name],\n    date: new Date(),\n  };\n\n  try {\n    await addDoc(collection(FIRESTORE_DB, \"ChatRoom\"), chatRoomData);\n    navigation.navigate(\"ChatRoom\");\n  } catch (err) {\n    console.log(err);\n  }\n\n  console.log(chatRoomData);\n  alert(\"채팅방 생성!\");\n}\n\n// 내가 포함된 채팅방을 가져옴\nexport async function getChatRoom() {\n  const uid = await getUserUid();\n  const chatRoomRef = collection(FIRESTORE_DB, \"ChatRoom\");\n  const q = query(chatRoomRef, where(\"participant\", \"array-contains\", uid));\n  try {\n    const querySnapshot = await getDocs(q);\n    const chatRoomList = querySnapshot.docs.map((doc) => {\n      const chatRoom = doc.data();\n      //console.log(chatRoom)\n\n      const chatRoomData = {\n        id: doc.id,\n        date: chatRoom.date,\n        participant: chatRoom.participant,\n        participantName: chatRoom.participantName,\n        productImage: chatRoom.productImage,\n        productName: chatRoom.productName,\n      };\n\n      return chatRoomData;\n    });\n\n    return chatRoomList;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n// 메시지를 DB로 전송\nexport async function sendMsg(roomId, content) {\n  const uid = await getUserUid();\n  const userInfo = await getUserInfo();\n  const userName = userInfo.name;\n\n  const messageRef = collection(FIRESTORE_DB, `ChatRoom/${roomId}/Message`);\n  try {\n    await addDoc(messageRef, {\n      date: new Date(),\n      fromId: uid,\n      fromName: userName,\n      content: content,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}","import React, { useEffect, useState } from \"react\";\nimport { Text, TouchableOpacity, View, FlatList, Image } from \"react-native\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport BottomNav from \"../components/BottomNav\";\nimport TopBar from \"../components/TopBar\";\nimport styles from \"../styles/ChatRoomStyles\";\nimport { getChatRoom } from \"../services/firestore_chat\";\nimport { getUserInfo } from \"../services/firestore_user\";\n\nexport default function ChatRoom({ navigation }) {\n  const [chatRooms, setChatRooms] = useState([]);\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    const fetchUserName = async () => {\n      try {\n        const userInfo = await getUserInfo();\n        setName(userInfo.name);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchUserName();\n  }, []);\n\n  useFocusEffect(\n    React.useCallback(() => {\n      const fetchChatRoomData = async () => {\n        const chatRoomData = await getChatRoom();\n        setChatRooms(chatRoomData);\n      };\n\n      fetchChatRoomData();\n    }, [])\n  );\n\n  // 판매자 이름을 가져오는 함수\n  const getOtherName = (userList) => {\n    try {\n      const other = userList.find((user) => user !== name); // name이 아닌 다른 값을 찾음\n      return other;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // 채팅 목록을 보여주는 함수\n  const renderItem = ({ item }) => {\n    return (\n      <TouchableOpacity\n        style={styles.chatContainer}\n        onPress={() =>\n          navigation.navigate(\"Chat\", {\n            other: getOtherName(item.participantName),\n            roomId: item.id,\n            productImage: item.productImage,\n            productName: item.productName,\n          })\n        }\n      >\n        <Image style={styles.chatImage} source={{ uri: item.productImage }} />\n        <View style={styles.chatInfoContainer}>\n          <View style={styles.chatTitleContainer}>\n            <Text\n              style={styles.chatTitle}\n              numberOfLines={1} // 보여질 최대 줄 수\n              ellipsizeMode=\"tail\" // 텍스트가 길어지면 ...으로 표시\n            >\n              {item.productName}\n            </Text>\n            <Text style={styles.chatName}>\n              {getOtherName(item.participantName)}\n            </Text>\n          </View>\n          <Text\n            style={styles.chatLastMessage}\n            numberOfLines={1} // 보여질 최대 줄 수\n            ellipsizeMode=\"tail\" // 텍스트가 길어지면 ...으로 표시\n          >\n            새로운 메시지\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <TopBar navigation={navigation} />\n      </View>\n\n      <View style={styles.body}>\n        <FlatList\n          data={chatRooms}\n          renderItem={renderItem}\n          keyExtractor={(item) => item.id}\n        />\n      </View>\n\n      <BottomNav navigation={navigation} />\n    </View>\n  );\n}\n","import { StyleSheet, Dimensions } from \"react-native\";\n\nconst { width: SCREEN_WIDTH } = Dimensions.get(\"window\");\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n  },\n\n  menuBar: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    marginTop: 50,\n    marginRight: 10,\n  },\n\n  menuIcon: {\n    padding: 3,\n  },\n\n  body: {\n    flex: 1,\n  },\n\n  infoBox: {\n    flexDirection: \"row\",\n    marginTop: 12,\n    marginBottom: 10,\n  },\n\n  userImage: {\n    borderColor: \"white\",\n    borderWidth: 1,\n    borderRadius: 80,\n    width: 100,\n    height: 100,\n    marginVertical: 10,\n  },\n\n  gearIcon: {\n    position: \"absolute\",\n    top: \"10%\",\n    right: 30,\n  },\n\n  userInfo: {\n    //backgroundColor: \"pink\",\n    flex: 1,\n    width: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  storeInfo: {\n    width: \"50%\",\n    justifyContent: \"center\",\n  },\n\n  selectedItemsContainer: {\n    //marginLeft: 5,\n    marginBottom: 10,\n  },\n\n  selectedItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 15,\n    backgroundColor: \"#91B391\",\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    marginHorizontal: 5,\n  },\n\n  selectedItemText: {\n    color: \"black\",\n  },\n\n  bioBox: {\n    height: 45,\n    borderColor: \"#91B391\",\n    borderWidth: 1,\n    borderRadius: 15,\n    padding: 12,\n    marginRight: 15,\n  },\n\n  storeText: {\n    color: \"black\",\n    fontWeight: \"bold\",\n    paddingBottom: 10,\n  },\n\n  followBox: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    marginTop: 10,\n    marginBottom: 28,\n  },\n\n  follow: {\n    flexDirection: \"row\",\n  },\n\n  followText: {\n    fontWeight: \"bold\",\n    paddingHorizontal: 5,\n  },\n\n  buttonBox: {\n    flexDirection: \"row\",\n  },\n\n  nonClickedButton: {\n    alignItems: \"center\",\n    width: \"50%\",\n    padding: 15,\n    backgroundColor: \"#91B391\",\n    borderTopRightRadius: 20,\n    borderTopLeftRadius: 20,\n  },\n\n  clickedButton: {\n    alignItems: \"center\",\n    width: \"50%\",\n    padding: 15,\n    backgroundColor: \"#669066\",\n    borderTopRightRadius: 20,\n    borderTopLeftRadius: 20,\n  },\n\n  btnText: {\n    fontWeight: \"bold\",\n    color: \"white\",\n  },\n\n  itemBox: {\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n  },\n\n  item: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    //borderWidth: 1,\n    //borderColor: \"white\",\n    //borderBottomColor: \"black\",\n    //borderRightColor: \"black\",\n    width: (SCREEN_WIDTH * 1) / 3,\n    height: (SCREEN_WIDTH * 1) / 3,\n  },\n});\n\nexport default styles;\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  ScrollView,\n  Dimensions,\n  TextInput,\n  Image,\n} from \"react-native\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport BottomNav from \"../components/BottomNav\";\nimport TopBar from \"../components/TopBar\";\nimport { getImages } from \"../services/storage\";\nimport {\n  getUserInfo,\n  getUserUid,\n  getUserByImg,\n} from \"../services/firestore_user\";\nimport styles from \"../styles/StoreStyles\";\nimport { FontAwesome } from \"@expo/vector-icons\";\n\nconst { width: SCREEN_WIDTH } = Dimensions.get(\"window\");\n\nexport default function Store({ navigation, route }) {\n  // true이면 판매 중, false이면 판매 완료인 상품 보여줌\n  const [isSelling, setIsSelling] = useState(true);\n\n  const [uid, setUid] = useState(null); // \"현재 로그인\"한 유저의 uid\n  const [isMyStore, setIsMyStore] = useState(false); // 내 상점인지 여부\n\n  const [sellerUid, setSellerUid] = useState(null); // \"판매자\"의 uid\n  const [sellerName, setSellerName] = useState(\"\"); // \"판매자\"의 닉네임\n  const [sellerImage, setSellerImage] = useState(null); // \"판매자\"의 이미지\n  const [sellerStyle, setSellerStyle] = useState([]); // \"판매자\"의 스타일\n  const [sellerBio, setSellerBio] = useState(null); // \"판매자\"의 소개\n\n  // 판매 중인 상품 데이터\n  const [sellingItem, setSellingItem] = useState([]);\n  // 판매 완료한 상품 데이터\n  const [soldItem, setSoldItem] = useState([]);\n\n  useFocusEffect(\n    React.useCallback(() => {\n      const fetchUserInfo = async () => {\n        try {\n          const myUid = await getUserUid(); // 현재 로그인한 유저의 uid 가져옴\n          setUid(myUid);\n\n          if (route?.params?.src) {\n            // 다른 사람 상점이면\n            const userInfo = await getUserByImg(route?.params?.src);\n\n            setSellerUid(userInfo.uid);\n            setSellerName(userInfo.name);\n            setSellerBio(userInfo.bio);\n            setSellerImage(route?.params?.src);\n            if (userInfo.style) setSellerStyle(userInfo.style);\n\n            const imagesList = await getImages(userInfo.uid);\n            setSellingItem(imagesList);\n          } else {\n            // 내 상점이면\n            const myInfo = await getUserInfo();\n            setIsMyStore(true);\n\n            setSellerUid(uid);\n            setSellerName(myInfo.name);\n            setSellerBio(myInfo.bio);\n            setSellerImage(myInfo.image);\n            if (myInfo.style) setSellerStyle(myInfo.style);\n\n            const imagesList = await getImages(myUid);\n            setSellingItem(imagesList);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      fetchUserInfo();\n    }, [])\n  );\n\n  // 스타일 태그를 나타냄\n  const renderSelectedStyles = () => {\n    return (\n      <ScrollView horizontal style={styles.selectedItemsContainer}>\n        {sellerStyle.map((item, index) => (\n          <View key={index} style={styles.selectedItem}>\n            <Text style={styles.selectedItemText}>{item}</Text>\n          </View>\n        ))}\n      </ScrollView>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n\n      <TopBar navigation={navigation} />\n\n      <ScrollView style={styles.body}>\n        <View style={styles.infoBox}>\n          <View style={styles.userInfo}>\n            {sellerImage == null ? (\n              <View style={styles.userImage}></View>\n            ) : (\n              <Image style={styles.userImage} source={{ uri: sellerImage }} />\n            )}\n\n            {isMyStore ? (\n              <TouchableOpacity\n                onPress={() => {\n                  navigation.navigate(\"Info\");\n                }}\n                style={styles.gearIcon}\n              >\n                <FontAwesome name=\"gear\" size={16} color=\"darkgray\" />\n              </TouchableOpacity>\n            ) : null}\n\n            <Text style={styles.storeText}>{sellerName}</Text>\n          </View>\n\n          <View style={styles.storeInfo}>\n            <View>\n              <Text style={styles.storeText}>스타일</Text>\n              <View>{renderSelectedStyles()}</View>\n            </View>\n\n            <View>\n              <Text style={styles.storeText}>소개</Text>\n              <TextInput\n                editable={false}\n                placeholder=\"상점 소개가 없습니다 :(\"\n                multiline={true}\n                numberOfLines={3}\n                ellipsizeMode=\"tail\"\n                value={sellerBio}\n                style={styles.bioBox}\n              />\n            </View>\n          </View>\n        </View>\n\n        <View style={styles.followBox}>\n          <TouchableOpacity\n            onPress={() => alert(\"팔로우 기능은 준비 중입니다.\")}\n            style={styles.follow}\n          >\n            <Text style={styles.followText}>Followers</Text>\n            <Text>10</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            onPress={() => alert(\"팔로우 기능은 준비 중입니다.\")}\n            style={styles.follow}\n          >\n            <Text style={styles.followText}>Following</Text>\n            <Text>15</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View>\n          <View style={styles.buttonBox}>\n            <TouchableOpacity\n              onPress={() => setIsSelling(true)}\n              style={\n                isSelling == true\n                  ? styles.clickedButton\n                  : styles.nonClickedButton\n              }\n            >\n              <Text style={styles.btnText}>Selling</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => setIsSelling(false)}\n              style={\n                isSelling == false\n                  ? styles.clickedButton\n                  : styles.nonClickedButton\n              }\n            >\n              <Text style={styles.btnText}>Sold</Text>\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles.itemBox}>\n            {isSelling == true\n              ? sellingItem.map((value, index) => (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"Detail\", { src: value })\n                    }\n                    key={index}\n                    style={styles.item}\n                  >\n                    <Image style={styles.item} source={{ uri: value }} />\n                  </TouchableOpacity>\n                ))\n              : soldItem.map((value, index) => (\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"Detail\", { src: value })\n                    }\n                    key={index}\n                    style={styles.item}\n                  >\n                    <Text>{value}</Text>\n                  </TouchableOpacity>\n                ))}\n          </View>\n        </View>\n      </ScrollView>\n\n      <BottomNav navigation={navigation} />\n    </View>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Platform,\n  Image,\n  Keyboard,\n} from \"react-native\";\nimport { sendMsg } from \"../services/firestore_chat\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { FIRESTORE_DB } from \"../firebaseConfig\";\nimport { collection, onSnapshot, query, orderBy } from \"firebase/firestore\";\n\nexport default function Chat({ navigation, route }) {\n  const [messages, setMessages] = useState([]); // 채팅 메시지 리스트\n  const [inputText, setInputText] = useState(\"\"); // 입력란의 텍스트\n  const scrollViewRef = useRef(null);\n\n  // DB에서 메시지 가져오기\n  const getMsg = () => {\n    const messageRef = collection(\n      FIRESTORE_DB,\n      `ChatRoom/${route.params.roomId}/Message`\n    );\n    const q = query(messageRef, orderBy(\"date\"));\n    const unsubscribe = onSnapshot(\n      q,\n      (querySnapshot) => {\n        const msgs = [];\n        querySnapshot.forEach((doc) => msgs.push(doc.data()));\n        setMessages(msgs);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  };\n\n  useEffect(() => {\n    getMsg();\n  }, []);\n\n  // 메시지 전송 함수\n  const send = async () => {\n    try {\n      Keyboard.dismiss();\n      setInputText(\"\");\n      scrollViewRef.current.scrollToEnd({ animated: true });\n      await sendMsg(route.params.roomId, inputText);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <TouchableOpacity\n          style={styles.goBackBtn}\n          onPress={() => navigation.goBack()}\n        >\n          <Icon name=\"angle-left\" size={36} color=\"white\" />\n        </TouchableOpacity>\n        <Text style={styles.headerText}>{route.params.other}</Text>\n      </View>\n\n      {/* 대화 내역이 보이는 공간 */}\n      <ScrollView\n        ref={scrollViewRef}\n        onContentSizeChange={() =>\n          scrollViewRef.current.scrollToEnd({ animated: true })\n        }\n      >\n        <View style={styles.chatInfo}>\n          <Image\n            style={styles.chatImage}\n            source={{ uri: route.params.productImage }}\n          />\n          <Text style={styles.chatText}>{route.params.productName}</Text>\n        </View>\n\n        <View style={styles.messageContainer}>\n          {messages.map((value, key) => (\n            <View\n              key={key}\n              style={\n                value.fromName !== route.params.other\n                  ? styles.myMessage\n                  : styles.otherMessage\n              }\n            >\n              <Text\n                style={\n                  value.fromName !== route.params.other\n                    ? styles.myMessageText\n                    : styles.otherMessageText\n                }\n              >\n                {value.content}\n              </Text>\n            </View>\n          ))}\n        </View>\n      </ScrollView>\n\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : undefined}\n      >\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.input}\n            value={inputText}\n            returnKeyType=\"done\"\n            onChangeText={setInputText}\n            placeholder=\"메시지를 입력하세요.\"\n            blurOnSubmit={true}\n            onSubmitEditing={send}\n          />\n\n          <TouchableOpacity onPress={send} style={styles.sendBtn}>\n            <Text style={styles.sendBtnText}>전송</Text>\n          </TouchableOpacity>\n        </View>\n      </KeyboardAvoidingView>\n      <View style={styles.hr}></View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n\n  goBackButtonText: {\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    fontSize: 18,\n  },\n\n  header: {\n    backgroundColor: \"#91B391\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingTop: 53,\n    paddingBottom: 10,\n    paddingHorizontal: 15,\n  },\n\n  headerText: {\n    flex: 1, // 이름 부분이 가운데로 정렬되도록 flex 속성 추가\n    color: \"white\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n\n  messageContainer: {\n    flex: 1,\n    paddingHorizontal: 20,\n    paddingTop: 20,\n    //alignItems: \"flex-end\",\n  },\n\n  myMessage: {\n    backgroundColor: \"#91B391\",\n    paddingVertical: 12,\n    paddingHorizontal: 15,\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: \"#91B391\",\n    marginBottom: 10,\n    alignSelf: \"flex-end\",\n  },\n\n  otherMessage: {\n    paddingVertical: 12,\n    paddingHorizontal: 15,\n    borderRadius: 20,\n    borderColor: \"#91B391\",\n    borderWidth: 1,\n    marginBottom: 10,\n    alignSelf: \"flex-start\",\n  },\n\n  myMessageText: {\n    fontWeight: \"600\",\n    color: \"white\",\n  },\n\n  otherMessageText: {\n    fontWeight: \"600\",\n    color: \"#91B391\",\n  },\n\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 15,\n    paddingTop: 10,\n    paddingBottom: 10,\n  },\n\n  input: {\n    flex: 1,\n    height: 40,\n    borderColor: \"#91B391\",\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 8,\n    marginRight: 10,\n  },\n\n  sendBtnText: {\n    color: \"#fff\",\n    fontWeight: \"600\",\n    fontSize: 16,\n  },\n\n  sendBtn: {\n    backgroundColor: \"#91B391\",\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 20,\n  },\n\n  chatInfo: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingVertical: 20,\n  },\n\n  chatImage: {\n    backgroundColor: \"#91B391\", // 이미지 위치 확인 위해 임시로 배경색 지정\n    width: 60,\n    height: 60,\n    borderRadius: 15,\n    marginLeft: 25,\n    marginRight: 20,\n  },\n\n  chatText: {\n    fontWeight: \"bold\",\n  },\n\n  hr: {\n    height: 30,\n  },\n});\n","import { FIRESTORE_DB, FIREBASE_AUTH } from \"../firebaseConfig\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\n// 회원가입 (Firebase에 유저 정보를 삽입)\nexport async function signUp(\n  email,\n  pw,\n  pwCheck,\n  name,\n  phone,\n  address,\n  navigation\n) {\n  if (email == \"\") {\n    alert(\"이메일은 필수 입력입니다!\");\n  } else if (pw == \"\") {\n    alert(\"비밀번호는 필수 입력입니다!\");\n  } else if (pw !== pwCheck) {\n    alert(\"비밀번호가 일치하지 않습니다.\");\n  } else if (name == \"\") {\n    alert(\"닉네임은 필수 입력입니다!\");\n  } else {\n    try {\n      // 새로운 유저 정보 생성 후 Authentication에 저장\n      const createdUser = await createUserWithEmailAndPassword(\n        FIREBASE_AUTH,\n        email,\n        pw\n      );\n\n      // firestore의 User 컬렉션에 uid를 문서 이름으로 하는 유저 정보 삽입\n      await setDoc(doc(FIRESTORE_DB, \"User\", createdUser.user.uid), {\n        email: email,\n        pw: pw,\n        name: name,\n        phone: phone,\n        address: address,\n      });\n      //console.log(\"디비에 유저 정보 넣는것도 성공\");\n      alert(\n        `가입을 축하드립니다!`\n      );\n\n      navigation.navigate(\"Home\"); // 가입 후 Home 화면으로 이동\n    } catch (err) {\n      //console.log(err);\n      switch (err.code) {\n        case \"auth/weak-password\":\n          alert(\"비밀번호는 6자리 이상이어야 합니다.\");\n          break;\n        case \"auth/invalid-email\":\n          alert(\"잘못된 이메일 주소 형식입니다.\");\n          break;\n        case \"auth/email-already-in-use\":\n          alert(\"이미 가입된 이메일입니다.\");\n          break;\n      }\n    }\n  }\n}\n\n// 로그인 (기존에 가입되어 있는 유저인지 확인)\nexport async function signIn(email, pw, navigation) {\n  if (email == \"\") {\n    alert(\"이메일은 필수 입력입니다!\");\n  } else if (pw == \"\") {\n    alert(\"비밀번호는 필수 입력입니다!\");\n  } else {\n    try {\n      const curUser = await signInWithEmailAndPassword(\n        FIREBASE_AUTH,\n        email,\n        pw\n      );\n      if (curUser) {\n        alert(\"로그인 성공!\");\n        navigation.navigate(\"Home\");\n      }\n    } catch (err) {\n      if (\n        err.code == \"auth/invalid-email\" ||\n        err.code == \"auth/wrong-password\"\n      ) {\n        alert(\"이메일 혹은 패스워드가 일치하지 않습니다.\");\n      } else {\n        alert(\"로그인 실패...\");\n      }\n      console.log(err);\n    }\n  }\n}\n// 로그아웃\nexport function signOut(navigation) {\n  FIREBASE_AUTH.signOut();\n  alert(\"로그아웃 되었습니다!\");\n  navigation.navigate(\"Loading\");\n}","import { StyleSheet } from \"react-native\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n  },\n\n  header: {\n    flexDirection: \"row\",\n    backgroundColor: \"#91B391\",\n    height: 100,\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n    paddingHorizontal: 20,\n    paddingBottom: 10,\n  },\n\n  headerText: {\n    color: \"white\",\n    fontSize: 22,\n    fontWeight: \"bold\",\n    marginBottom: 2,\n  },\n\n  body: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  form: {\n    width: \"90%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    marginVertical: 5,\n  },\n\n  input: {\n    flex: 1,\n    borderRadius: 10,\n    borderColor: \"#91B391\",\n    borderWidth: 1,\n    padding: 10,\n    marginHorizontal: 6,\n  },\n\n  btn: {\n    backgroundColor: \"#91B391\",\n    borderRadius: 20,\n    padding: 10,\n    marginHorizontal: 3,\n  },\n\n  textContainer: {\n    width: 40,\n    alignItems: \"center\",\n  },\n\n  signUpBtn: {\n    backgroundColor: \"#91B391\",\n    borderColor: \"#91B391\",\n    borderWidth: 1,\n    borderRadius: 10,\n    padding: 12,\n    marginBottom: 50,\n  },\n\n  icon: {\n    marginLeft: 5,\n  },\n\n  hr: {\n    width: \"90%\",\n    borderBottomColor: \"#bbb\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    marginVertical: 10,\n  },\n});\n\nexport default styles;\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { View, Text, TouchableOpacity, TextInput } from \"react-native\";\nimport { Feather } from \"@expo/vector-icons\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { signUp } from \"../services/auth\";\nimport styles from \"../styles/SignUpStyles\";\n\nexport default function SignUp({ navigation }) {\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [pwCheck, setPwCheck] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n\n  // 회원가입 버튼 누를 시 동작하는 함수\n  const handleSignUp = () => {\n    signUp(email, pw, pwCheck, name, phone, address, navigation);\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n\n      <View style={styles.header}>\n        <TouchableOpacity onPress={() => navigation.goBack()}>\n          <Icon name=\"angle-left\" size={34} color=\"white\" />\n        </TouchableOpacity>\n        <Text style={styles.headerText}>Sign Up</Text>\n      </View>\n\n      <View style={styles.body}>\n        {/* 이메일 입력창 */}\n        <View style={styles.form}>\n          <View style={styles.textContainer}>\n            <Text>이메일</Text>\n          </View>\n          <TextInput\n            placeholder=\"이메일을 입력하세요.\"\n            onChangeText={setEmail}\n            value={email}\n            style={styles.input}\n          />\n          {/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~아직 구현 못해서 임시로 버튼 다 없앨게요~~~~~~~~~~~~~~~~~~~~~~~~~~\n          <TouchableOpacity style={styles.btn}>\n            <Text>인증 요청</Text>\n          </TouchableOpacity>\n          */}\n        </View>\n\n        {/* 이메일 인증 코드 입력창\n        <View style={styles.form}>\n          <TextInput style={styles.input} />\n          <View style={styles.textContainer}>\n            <Text>4:39</Text>\n          </View>\n          <TouchableOpacity style={styles.btn}>\n            <Text>인증 확인</Text>\n          </TouchableOpacity>\n        </View>\n        */}\n\n        <View style={styles.hr} />\n\n        {/* 비밀번호 입력창 */}\n        <View style={styles.form}>\n          <Text>비밀번호</Text>\n          <TextInput\n            placeholder=\"비밀번호를 입력하세요.\"\n            secureTextEntry={true}\n            onChangeText={setPw}\n            value={pw}\n            style={styles.input}\n          />\n        </View>\n        {/* 비밀번호 확인 입력창 */}\n        <View style={styles.form}>\n          <Text>비밀번호 확인</Text>\n          <TextInput\n            placeholder=\"비밀번호를 입력하세요.\"\n            secureTextEntry={true}\n            onChangeText={setPwCheck}\n            value={pwCheck}\n            style={styles.input}\n          />\n        </View>\n\n        <View style={styles.hr} />\n\n        {/* 닉네임 입력창 */}\n        <View style={styles.form}>\n          <View style={styles.textContainer}>\n            <Text>닉네임</Text>\n          </View>\n          <TextInput\n            placeholder=\"닉네임을 입력하세요.\"\n            onChangeText={setName}\n            value={name}\n            style={styles.input}\n          />\n          {/*\n          <TouchableOpacity style={styles.btn}>\n            <Text>중복 확인</Text>\n          </TouchableOpacity>\n          */}\n        </View>\n\n        {/* 연락처 입력창 */}\n        <View style={styles.form}>\n          <View style={styles.textContainer}>\n            <Text>연락처</Text>\n          </View>\n          <TextInput\n            placeholder=\"휴대폰 번호를 입력하세요.\"\n            onChangeText={setPhone}\n            value={phone}\n            style={styles.input}\n          />\n          {/*\n          <TouchableOpacity style={styles.btn}>\n            <Text>인증 요청</Text>\n          </TouchableOpacity>\n          */}\n        </View>\n\n        {/* 주소 입력창 */}\n        <View style={styles.form}>\n          <View style={styles.textContainer}>\n            <Text>주소</Text>\n          </View>\n          <TextInput\n            placeholder=\"주소를 입력하세요.\"\n            onChangeText={setAddress}\n            value={address}\n            style={styles.input}\n          />\n          {/*<Feather name=\"search\" size={24} color=\"#bbb\" style={styles.icon} />*/}\n        </View>\n      </View>\n\n      <TouchableOpacity onPress={handleSignUp} style={styles.signUpBtn}>\n        <Text>회원가입</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n","import { StyleSheet } from \"react-native\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n  },\n\n  header: {\n    flexDirection: \"row\",\n    backgroundColor: \"#91B391\",\n    height: 100,\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n    paddingHorizontal: 20,\n    paddingBottom: 10,\n  },\n\n  headerText: {\n    color: \"white\",\n    fontSize: 22,\n    fontWeight: \"bold\",\n    marginBottom: 2,\n  },\n\n  body: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  form: {\n    width: \"90%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    marginVertical: 5,\n  },\n\n  input: {\n    flex: 1,\n    borderRadius: 10,\n    borderColor: \"#91B391\",\n    borderWidth: 1,\n    padding: 10,\n    marginHorizontal: 6,\n  },\n\n  textContainer: {\n    width: 50,\n    alignItems: \"center\",\n  },\n\n  signUpBtn: {\n    backgroundColor: \"#91B391\",\n    borderColor: \"#91B391\",\n    borderWidth: 1,\n    borderRadius: 10,\n    padding: 12,\n    marginBottom: 50,\n  },\n});\n\nexport default styles;\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  TextInput,\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport { signIn } from \"../services/auth\";\nimport styles from \"../styles/SignInStyles\";\n\nexport default function SignUp({ navigation }) {\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n\n  // 로그인 버튼 누를 시 동작하는 함수\n  const handleSignIn = () => {\n    signIn(email, pw, navigation);\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n\n      <View style={styles.header}>\n        <TouchableOpacity onPress={() => navigation.goBack()}>\n          <Icon name=\"angle-left\" size={34} color=\"white\" />\n        </TouchableOpacity>\n        <Text style={styles.headerText}>Sign In</Text>\n      </View>\n\n      <View style={styles.body}>\n        {/* 이메일 입력창 */}\n        <View style={styles.form}>\n          <View style={styles.textContainer}>\n            <Text>이메일</Text>\n          </View>\n          <TextInput\n            placeholder=\"이메일을 입력하세요.\"\n            onChangeText={setEmail}\n            value={email}\n            style={styles.input}\n          />\n        </View>\n\n        {/* 비밀번호 입력창 */}\n        <View style={styles.form}>\n          <View style={styles.textContainer}>\n            <Text>비밀번호</Text>\n          </View>\n          <TextInput\n            placeholder=\"비밀번호를 입력하세요.\"\n            secureTextEntry={true}\n            onChangeText={setPw}\n            value={pw}\n            style={styles.input}\n          />\n        </View>\n      </View>\n\n      <TouchableOpacity onPress={handleSignIn} style={styles.signUpBtn}>\n        <Text>로그인</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n","import { StyleSheet } from \"react-native\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    justifyContent: \"space-between\",\n  },\n\n  menuBar: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginTop: 50,\n    marginHorizontal: 20,\n  },\n\n  menuIcon: {\n    padding: 3,\n  },\n\n  menuText: {\n    fontSize: 17,\n  },\n\n  body: {\n    flex: 1,\n    marginVertical: 30,\n  },\n\n  pic: {\n    position: \"relative\", // 사진 삭제 버튼 겹치게 하기 위함\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    borderColor: \"black\",\n    borderWidth: 1,\n    borderRadius: 80,\n    width: 150, // 항상 고정된 크기\n    height: 150,\n  },\n\n  deletePic: {\n    position: \"absolute\", // 부모 컴포넌트 내에서 절대적 위치 지정\n    backgroundColor: \"#91B391\",\n    borderColor: \"#91B391\",\n    borderWidth: 1,\n    borderRadius: 20,\n    padding: 3,\n    bottom: 7,\n    right: 7,\n  },\n\n  inputBox: {\n    width: \"95%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: 12,\n  },\n\n  labelBox: {\n    alignItems: \"center\",\n    marginLeft: 5,\n    width: 65,\n  },\n\n  input: {\n    flex: 1,\n    borderColor: \"white\",\n    borderBottomColor: \"black\",\n    borderWidth: 1,\n    marginRight: 15,\n  },\n\n  inputAreaBox: {\n    flex: 1, // 세로로 flexible\n    width: \"95%\",\n    flexDirection: \"row\",\n    marginVertical: 12,\n    marginTop: 20,\n  },\n\n  inputArea: {\n    flex: 1,\n    height: 180,\n    borderColor: \"black\",\n    borderWidth: 1,\n    borderRadius: 10,\n    marginRight: 10,\n    padding: 5,\n  },\n\n  addTagBtn: {\n    backgroundColor: \"#669066\",\n    borderRadius: 15,\n    paddingHorizontal: 20,\n    paddingVertical: 6,\n  },\n\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n\n  modalInner: {\n    borderColor: \"#91B391\",\n    borderWidth: 1,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    width: 340,\n  },\n\n  modalHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#91B391\",\n    padding: 15,\n    borderTopRightRadius: 15,\n    borderTopLeftRadius: 15,\n  },\n\n  selectedItemsContainer: {\n    marginLeft: 5,\n  },\n\n  selectedItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 15,\n    backgroundColor: \"#91B391\",\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    marginHorizontal: 5,\n  },\n\n  selectedItemText: {\n    color: \"black\",\n  },\n\n  footer: {\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\",\n    backgroundColor: \"#91B391\",\n    paddingBottom: 35,\n    paddingTop: 15,\n  },\n\n  hr: {\n    marginVertical: 15,\n  },\n\n  icon: {\n    marginLeft: 5,\n  },\n\n  // 모달 안에 있는 태그들에 관한 스타일\n  modalItemContainer: {\n    padding: 30,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n\n  modalItem: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: \"#777\",\n    margin: 5,\n  },\n\n  selectedModalItem: {\n    backgroundColor: \"#91B391\",\n    borderColor: \"#91B391\",\n  },\n\n  selectionText: {\n    color: \"black\",\n    alignSelf: \"center\",\n    marginBottom: 20,\n  },\n\n  maxSelectionText: {\n    color: \"red\",\n    alignSelf: \"center\",\n    marginBottom: 20,\n  },\n\n  nameBtn: {\n    backgroundColor: \"#91B391\",\n    borderRadius: 20,\n    padding: 10,\n  },\n\n  logOutBtn: {\n    alignSelf: \"center\",\n    borderColor: \"black\",\n    borderWidth: 1,\n    borderRadius: 10,\n    padding: 8,\n  },\n});\n\nexport default styles;\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  Dimensions,\n  TextInput,\n  ScrollView,\n  Modal,\n  Alert,\n  ActivityIndicator,\n  Platform,\n} from \"react-native\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport BottomNav from \"../components/BottomNav\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { signOut } from \"../services/auth\";\nimport styles from \"../styles/InfoStyles\";\nimport { getUserInfo, updateUserInfo } from \"../services/firestore_user\";\n\nconst { width: SCREEN_WIDTH } = Dimensions.get(\"window\");\n\nexport default function Info({ navigation }) {\n  const [name, setName] = useState(\"\"); // 닉네임\n  const [bio, setBio] = useState(\"\"); // 유저 소개\n  const [image, setImage] = useState(null); // 사용자가 설정한 이미지\n  const [isLoading, setIsLoading] = useState(false); // 프로필 변경 성공 여부\n\n  // 선택된 스타일 태그들\n  const [selectedStyles, setSelectedStyles] = useState([]);\n\n  // 스타일 모달이 보이는지 여부\n  const [styleModalVisible, setStyleModalVisible] = useState(false);\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        const userInfo = await getUserInfo();\n        setName(userInfo.name);\n        if (userInfo.bio) setBio(userInfo.bio);\n        if (userInfo.image) setImage(userInfo.image);\n        if (userInfo.style) setSelectedStyles(userInfo.style);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchUserInfo();\n  }, []);\n\n  // 스타일 태그\n  const stylesList = [\n    \"Casual\",\n    \"Formal\",\n    \"Sports\",\n    \"Vintage\",\n    \"Romantic\",\n    \"Unique\",\n    \"Travel\",\n    \"Bohemian\",\n    \"Streetwear\",\n    \"Preppy\",\n    \"Chic\",\n    \"Minimalist\",\n    \"Tomboy\",\n    \"Rocker\",\n    \"Safari\",\n  ];\n\n  // 이미지 추가하는 함수\n  const pickImage = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 0.2,\n      });\n\n      if (!result.canceled) {\n        setImage(result.assets[0].uri);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const deleteImage = async () => {\n    if (image) {\n      setImage(null);\n    }\n  };\n\n  const complete = async () => {\n    if (Platform.OS == \"web\") {\n      if (!isLoading) {\n        setIsLoading(true);\n        await updateUserInfo(image, name, selectedStyles, bio);\n        setTimeout(() => setIsLoading(false), 1000);\n      }\n    } else {\n      Alert.alert(\"Update\", \"프로필을 변경하시겠습니까?\", [\n        { text: \"아니옹...\" },\n        {\n          text: \"네!\",\n          style: \"default\",\n          onPress: async () => {\n            if (!isLoading) {\n              setIsLoading(true);\n              await updateUserInfo(image, name, selectedStyles, bio);\n              setTimeout(() => setIsLoading(false), 1000);\n            }\n          },\n        },\n      ]);\n    }\n  };\n\n  const close = () => {\n    if (Platform.OS == \"web\") {\n      navigation.goBack();\n    } else {\n      Alert.alert(\"Close\", \"저장하지 않은 변경 내용은 모두 사라집니다.\", [\n        { text: \"취소\" },\n        {\n          text: \"네 괜찮아요!\",\n          style: \"default\",\n          onPress: () => {\n            navigation.goBack();\n          },\n        },\n      ]);\n    }\n  };\n\n  // 스타일 태그 눌렀을 때 동작하는 함수\n  const handleStyleTagPress = (style) => {\n    if (selectedStyles.includes(style)) {\n      // 이미 클릭된 스타일이었으면 selectedStyles 리스트에서 제거\n      setSelectedStyles(\n        selectedStyles.filter((selectedStyle) => selectedStyle !== style)\n      );\n    } else {\n      // 클릭되지 않은 스타일이었으면 selectedStyles 리스트에 추가\n      setSelectedStyles([...selectedStyles, style]);\n    }\n  };\n\n  // 선택된 스타일 태그를 나타냄\n  const renderSelectedStyles = () => {\n    return (\n      <ScrollView horizontal style={styles.selectedItemsContainer}>\n        {selectedStyles.map((item, index) => (\n          <View key={index} style={styles.selectedItem}>\n            <Text style={styles.selectedItemText}>{item}</Text>\n            <TouchableOpacity\n              onPress={() => {\n                handleStyleTagPress(item);\n              }}\n            >\n              <Feather name=\"x\" size={16} color=\"white\" style={styles.icon} />\n            </TouchableOpacity>\n          </View>\n        ))}\n      </ScrollView>\n    );\n  };\n\n  // 모달 내에서 스타일 태그들을 보여줄 함수\n  const renderStyleTagButtons = () => {\n    return (\n      <View style={styles.modalItemContainer}>\n        {stylesList.map((style) => (\n          <TouchableOpacity\n            onPress={() => handleStyleTagPress(style)}\n            key={style}\n            style={[\n              styles.modalItem,\n              selectedStyles.includes(style) ? styles.selectedModalItem : null, // 선택됐으면 옵션 색깔 변경\n            ]}\n          >\n            <Text>{style}</Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n\n      {/*상단바*/}\n      <View style={styles.menuBar}>\n        <TouchableOpacity onPress={close} style={styles.menuIcon}>\n          <AntDesign name=\"close\" size={28} color=\"black\" />\n        </TouchableOpacity>\n\n        <Text style={styles.menuText}>내 프로필</Text>\n        <TouchableOpacity onPress={complete} style={styles.menuIcon}>\n          {/*완료 누르면 내 상점으로 이동하도록 추후 변경*/}\n          <Text style={styles.menuText}>완료</Text>\n        </TouchableOpacity>\n      </View>\n\n      {isLoading ? (\n        <ActivityIndicator color=\"black\" size=\"large\" />\n      ) : (\n        <KeyboardAwareScrollView>\n          <ScrollView style={styles.body}>\n            {/*사용자 이미지 공간*/}\n            {image == null ? (\n              <View style={styles.pic}>\n                <TouchableOpacity onPress={pickImage}>\n                  <Feather name=\"camera\" size={18} color=\"black\" />\n                </TouchableOpacity>\n              </View>\n            ) : (\n              <View style={styles.pic}>\n                {image && <Image source={{ uri: image }} style={styles.pic} />}\n                <TouchableOpacity\n                  onPress={deleteImage}\n                  style={styles.deletePic}\n                >\n                  <AntDesign name=\"close\" size={18} color=\"white\" />\n                </TouchableOpacity>\n              </View>\n            )}\n\n            <View style={styles.hr} />\n\n            {/*사용자 닉네임 공간*/}\n            <View style={styles.inputBox}>\n              <View style={styles.labelBox}>\n                <Text style={styles.label}>닉네임</Text>\n              </View>\n              <TextInput\n                onChangeText={setName}\n                value={name}\n                returnKeyType=\"done\"\n                style={styles.input}\n              />\n              <TouchableOpacity\n                onPress={() => alert(\"준비 중입니다 :(\")}\n                style={styles.nameBtn}\n              >\n                <Text>중복 확인</Text>\n              </TouchableOpacity>\n            </View>\n\n            {/*사용자 스타일 설정 공간*/}\n            <View style={styles.inputBox}>\n              <View style={styles.labelBox}>\n                <Text style={styles.label}>스타일</Text>\n              </View>\n\n              {/*스타일 플러스 버튼*/}\n              <TouchableOpacity\n                onPress={() => setStyleModalVisible(true)}\n                style={styles.addTagBtn}\n              >\n                <AntDesign name=\"plus\" size={16} color=\"white\" />\n              </TouchableOpacity>\n\n              {/* 선택한 스타일 태그들을 나열해서 보여줌 */}\n              <View>{renderSelectedStyles()}</View>\n\n              {/* 스타일 태그 선택하는 모달 */}\n              <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={styleModalVisible}\n                onRequestClose={() => setStyleModalVisible(false)}\n              >\n                <View style={styles.modalContainer}>\n                  <View style={styles.modalInner}>\n                    <View style={styles.modalHeader}>\n                      <Text>스타일 태그</Text>\n                      <TouchableOpacity\n                        onPress={() => {\n                          if (selectedStyles.length <= 3)\n                            setStyleModalVisible(false);\n                        }}\n                      >\n                        <Text style={styles.closeModalButtonText}>완료</Text>\n                      </TouchableOpacity>\n                    </View>\n                    {renderStyleTagButtons()}\n                    {selectedStyles.length > 3 ? (\n                      <Text style={styles.maxSelectionText}>\n                        최대 3개의 스타일 태그를 선택할 수 있습니다!\n                      </Text>\n                    ) : (\n                      <Text style={styles.selectionText}>\n                        내 상점의 스타일 태그를 선택해주세요!\n                      </Text>\n                    )}\n                  </View>\n                </View>\n              </Modal>\n            </View>\n\n            {/*상점 소개 작성 공간*/}\n            <View style={styles.inputAreaBox}>\n              <View style={styles.labelBox}>\n                <Text style={styles.label}>소개</Text>\n              </View>\n              <TextInput\n                onChangeText={setBio}\n                value={bio}\n                multiline={true}\n                placeholder=\"상점 소개를 적어주세요 :D\"\n                returnKeyType=\"done\"\n                blurOnSubmit={true}\n                style={styles.inputArea}\n              />\n            </View>\n          </ScrollView>\n\n          {/*로그아웃 버튼*/}\n          <TouchableOpacity\n            onPress={() => signOut(navigation)}\n            style={styles.logOutBtn}\n          >\n            <Text>로그아웃</Text>\n          </TouchableOpacity>\n        </KeyboardAwareScrollView>\n      )}\n\n      <BottomNav navigation={navigation} />\n    </View>\n  );\n}\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  TextInput,\n  ScrollView,\n} from \"react-native\";\nimport BouncyCheckboxGroup, {\n  ICheckboxButton,\n} from \"react-native-bouncy-checkbox-group\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { getProduct } from \"../services/firestore_product\";\nimport { addChatRoom } from \"../services/firestore_chat\";\nimport { getUserUid } from \"../services/firestore_user\";\nimport styles from \"../styles/AddStyles\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n\nexport default function Detail({ navigation, route }) {\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [condition, setCondition] = useState(0);\n  const [size, setSize] = useState(0);\n  const [style, setStyle] = useState([]);\n  const [category, setCategory] = useState([]);\n  const [detail, setDetail] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [seller, setSeller] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const checkboxStyles = {\n    fillColor: \"#91B391\",\n    unfillColor: \"white\",\n    textStyle: {\n      textDecorationLine: \"none\",\n    },\n  };\n\n  const conditionCheckboxGroup = [\n    {\n      id: 0,\n      text: \"최상\",\n      ...checkboxStyles,\n    },\n    {\n      id: 1,\n      text: \"상\",\n      ...checkboxStyles,\n    },\n    {\n      id: 2,\n      text: \"중\",\n      ...checkboxStyles,\n    },\n    {\n      id: 3,\n      text: \"하\",\n      ...checkboxStyles,\n    },\n  ];\n\n  const sizeCheckboxGroup = [\n    {\n      id: 0,\n      text: \"L\",\n      ...checkboxStyles,\n    },\n    {\n      id: 1,\n      text: \"M\",\n      ...checkboxStyles,\n    },\n    {\n      id: 2,\n      text: \"S\",\n      ...checkboxStyles,\n    },\n  ];\n\n  useEffect(() => {\n    const fetchProductInfo = async () => {\n      try {\n        const productInfo = await getProduct(route.params.src);\n        setSeller(productInfo.uid);\n        setName(productInfo.name);\n        setPrice(productInfo.price);\n        const conNum = conditionCheckboxGroup.find(\n          (obj) => obj.text === productInfo.condition\n        ).id;\n        setCondition(conNum);\n        const sizeNum = sizeCheckboxGroup.find(\n          (obj) => obj.text === productInfo.size\n        ).id;\n        setSize(sizeNum);\n        setStyle(productInfo.style);\n        setCategory(productInfo.category);\n        setDetail(productInfo.detail);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchProductInfo();\n  }, []);\n\n  // 스타일 태그를 나타냄\n  const renderSelectedStyles = () => {\n    return (\n      <ScrollView horizontal style={styles.selectedItemsContainer}>\n        {style.map((item, index) => (\n          <View key={index} style={styles.selectedItem}>\n            <Text style={styles.selectedItemText}>{item}</Text>\n          </View>\n        ))}\n      </ScrollView>\n    );\n  };\n  // 카테고리 태그를 나타냄\n  const renderSelectedCategories = () => {\n    return (\n      <ScrollView horizontal style={styles.selectedItemsContainer}>\n        {category.map((item, index) => (\n          <View key={index} style={styles.selectedItem}>\n            <Text style={styles.selectedItemText}>{item}</Text>\n          </View>\n        ))}\n      </ScrollView>\n    );\n  };\n\n  const pressChatBtn = async () => {\n    if (!isLoading) {\n      const myUid = await getUserUid();\n      if (seller == myUid) alert(\"자신에게는 채팅을 보낼 수 없습니다.\");\n      else {\n        setIsLoading(true);\n        await addChatRoom(route.params.src, name, seller, navigation);\n        setTimeout(() => setIsLoading(false), 1000);\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n\n      <View style={styles.menuBar}>\n        <TouchableOpacity\n          onPress={() => navigation.goBack()}\n          style={styles.menuIcon}\n        >\n          <AntDesign name=\"close\" size={28} color=\"black\" />\n        </TouchableOpacity>\n      </View>\n\n      <ScrollView style={styles.body}>\n        <Image style={styles.pic} source={{ uri: route.params.src }} />\n\n        <View style={styles.hr} />\n\n        <View style={styles.inputBox}>\n          <View style={styles.labelBox}>\n            <Text style={styles.label}>상품명</Text>\n          </View>\n          <TextInput editable={false} value={name} style={styles.input} />\n        </View>\n\n        <View style={styles.inputBox}>\n          <View style={styles.labelBox}>\n            <Text style={styles.label}>가격</Text>\n          </View>\n          <Text>{price} ￦</Text>\n        </View>\n\n        <View style={styles.inputBox}>\n          <View style={styles.labelBox}>\n            <Text style={styles.label}>상태</Text>\n          </View>\n          <BouncyCheckboxGroup\n            initial={condition}\n            data={conditionCheckboxGroup}\n            style={styles.checkbox}\n          />\n        </View>\n\n        <View style={styles.inputBox}>\n          <View style={styles.labelBox}>\n            <Text style={styles.label}>사이즈</Text>\n          </View>\n          <BouncyCheckboxGroup\n            initial={size}\n            data={sizeCheckboxGroup}\n            style={styles.checkbox}\n          />\n        </View>\n\n        <View style={styles.inputBox}>\n          <View style={styles.labelBox}>\n            <Text style={styles.label}>카테고리</Text>\n          </View>\n          <View>{renderSelectedCategories()}</View>\n        </View>\n\n        <View style={styles.inputBox}>\n          <View style={styles.labelBox}>\n            <Text style={styles.label}>스타일</Text>\n          </View>\n          <View>{renderSelectedStyles()}</View>\n        </View>\n\n        <View style={styles.inputAreaBox}>\n          <View style={styles.labelBox}>\n            <Text style={styles.label}>상세 설명</Text>\n          </View>\n          <TextInput\n            value={detail}\n            editable={false}\n            multiline={true}\n            placeholder=\"상세 설명이 없습니다 :(\"\n            style={styles.inputArea}\n          />\n        </View>\n      </ScrollView>\n\n      <View style={styles.footer}>\n        <View style={styles.footerLeft}>\n          <TouchableOpacity\n            onPress={() => alert(\"찜 기능은 추후 구현 예정입니다 :)\")}\n            style={styles.detailIcon}\n          >\n            <Icon name=\"heart\" size={26} color=\"white\" />\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            onPress={() => alert(\"카트 기능은 추후 구현 예정입니다 :)\")}\n            style={styles.detailIcon}\n          >\n            <Icon name=\"shopping-basket\" size={26} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.priceBox}>\n          <Text style={styles.priceText}>{price} ￦</Text>\n        </View>\n\n        <TouchableOpacity onPress={pressChatBtn} style={styles.chatBtn}>\n          <Text style={styles.chatText}>채팅 보내기</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  Dimensions,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport BottomNav from \"../components/BottomNav\";\nimport TopBar from \"../components/TopBar\";\nimport { getProductsByKeyword } from \"../services/storage\";\n\nconst { width: SCREEN_WIDTH } = Dimensions.get(\"window\");\n\nexport default function Products({ navigation, route }) {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const fetchProducts = async (keyword, style, category) => {\n      try {\n        const productList = await getProductsByKeyword(\n          keyword,\n          style,\n          category\n        );\n        setProducts(productList);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchProducts(\n      route.params.keyword,\n      route.params.style,\n      route.params.category\n    );\n  }, []);\n\n  const renderSelectedItems = () => {\n    const selectedItems = [...route.params.style, ...route.params.category]; // 선택된 스타일 + 카테고리를 담은 리스트\n\n    return (\n      <ScrollView horizontal style={styles.selectedItemsContainer}>\n        {selectedItems.map((item, index) => (\n          <View key={index} style={styles.selectedItem}>\n            <Text style={styles.selectedItemText}>{item}</Text>\n          </View>\n        ))}\n      </ScrollView>\n    );\n  };\n\n  // ~~~~~~~~~~~~~~~~~~~~~~~~상품들을 보여주는 컴포넌트~~~~~~~~~~~~~~~~~~~~~~~~\n  const renderProducts = () =>\n    products.map((value, key) => (\n      <TouchableOpacity\n        onPress={() => navigation.navigate(\"Detail\", { src: value.image })}\n        style={styles.item}\n        key={key}\n      >\n        <Image style={styles.itemImg} source={{ uri: value.image }} />\n        <Text style={styles.itemName}>{value.name}</Text>\n        <Text style={styles.itemPrice}>{value.price} ￦</Text>\n      </TouchableOpacity>\n    ));\n\n  return (\n    <View style={styles.container}>\n      <TopBar navigation={navigation} />\n\n      <View>{renderSelectedItems()}</View>\n      <ScrollView style={styles.body}>\n        <View style={styles.itemContainer}>{renderProducts()}</View>\n      </ScrollView>\n\n      <BottomNav navigation={navigation} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n  },\n\n  body: {\n    flex: 1,\n  },\n\n  itemContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginHorizontal: 10,\n  },\n\n  item: {},\n\n  itemImg: {\n    height: (SCREEN_WIDTH - 48) * 0.5,\n    width: (SCREEN_WIDTH - 48) * 0.5,\n    margin: 7,\n    borderRadius: 20,\n  },\n\n  itemName: {\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    color: \"#669066\",\n  },\n\n  itemPrice: {\n    textAlign: \"center\",\n    marginBottom: 15,\n    color: \"gray\",\n  },\n\n  selectedItemsContainer: {\n    marginTop: 20,\n    marginLeft: 10,\n    marginBottom: 20,\n  },\n\n  selectedItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 15,\n    backgroundColor: \"#91B391\",\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    marginHorizontal: 5,\n  },\n\n  selectedItemText: {\n    color: \"black\",\n  },\n});\n","import React from \"react\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n// screens\nimport Loading from \"./screens/Loading\";\nimport Home from \"./screens/Home\";\nimport Search from \"./screens/Search\";\nimport Add from \"./screens/Add\";\nimport ChatRoom from \"./screens/ChatRoom\";\nimport Store from \"./screens/Store\";\nimport Chat from \"./screens/Chat\";\nimport SignUp from \"./screens/SignUp\";\nimport SignIn from \"./screens/SignIn\";\nimport Info from \"./screens/Info\";\nimport Detail from \"./screens/Detail\";\nimport Products from \"./screens/Products\";\n\nexport default function App() {\n  const Stack = createStackNavigator();\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Loading\" screenOptions={{ headerShown: false }}>\n        <Stack.Screen name=\"Loading\" component={Loading} />\n        <Stack.Screen name=\"Home\" component={Home} />\n        <Stack.Screen name=\"Search\" component={Search} />\n        <Stack.Screen name=\"Add\" component={Add} />\n        <Stack.Screen name=\"Detail\" component={Detail} />\n        <Stack.Screen name=\"ChatRoom\" component={ChatRoom} />\n        <Stack.Screen name=\"Chat\" component={Chat} />\n        <Stack.Screen name=\"Store\" component={Store} />\n        <Stack.Screen name=\"Info\" component={Info} />\n        <Stack.Screen name=\"Products\" component={Products} />\n        <Stack.Screen name=\"SignUp\" component={SignUp} />\n        <Stack.Screen name=\"SignIn\" component={SignIn} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/VinPong/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [17], () => (__webpack_require__(9386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["StyleSheet","container","flex","backgroundColor","justifyContent","alignItems","title","titleText","color","fontSize","fontWeight","titleImg","height","width","footer","marginBottom","login","paddingHorizontal","paddingVertical","borderRadius","loginText","signUpText","textDecorationLine","marginTop","Loading","_ref","navigation","_jsxs","View","style","styles","children","_jsx","StatusBar","TouchableOpacity","Image","source","uri","onPress","navigate","Text","BottomNav","menuIcon","Feather","name","size","FontAwesome","flexDirection","paddingBottom","paddingTop","padding","TopBar","topBar","goBack","topBarLeft","Icon","topBarRight","topIcon","alert","marginHorizontal","marginLeft","FIREBASE_APP","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FIRESTORE_DB","getFirestore","FIREBASE_AUTH","getAuth","FIREBASE_STORAGE","getStorage","uploadImage","_x","_x2","_x3","_x4","_uploadImage","apply","arguments","_asyncToGenerator","uid","file","date","filePath","storageRef","ref","response","fetch","blob","snapshot","uploadBytes","getDownloadURL","err","console","log","_getAllImages","docSnap","getDocs","collection","imagesList","forEach","doc","push","data","image","_getProductsByKeyword","keyword","category","allProductList","productRef","length","styleQ","query","where","styleProductList","docs","map","product","id","price","_toConsumableArray","categoryQ","categoryProductList","Set","JSON","stringify","parse","getImages","_x8","_getImages","imagesRef","promises","listAll","items","itemRef","path","fullPath","_x9","Promise","all","filter","url","_getAllUserImages","SCREEN_WIDTH","Dimensions","menuBar","marginRight","body","marginVertical","bodyText","alignSelf","banner","borderColor","borderWidth","productContainer","margin","scrollIcon","weatherBox","weatherInner","weatherLeft","weatherRight","city","weather","temp","dressText","dressIcon","API_KEY","Home","_useState","useState","_useState2","_slicedToArray","productImages","setProductImages","_useState3","_useState4","storeImages","setStoreImages","_useState5","_useState6","setCity","_useState7","_useState8","setWeather","_useState9","_useState10","setTemp","_useState11","_useState12","setOk","getWeather","_ref2","Location","requestForegroundPermissionsAsync","granted","_yield$Location$getCu2","getCurrentPositionAsync","accuracy","coords","latitude","longitude","location","reverseGeocodeAsync","useGoogleMaps","json","main","e","useEffect","useFocusEffect","React","fetchImages","_ref3","productImagesList","getAllImages","storeImageList","getAllUserImages","error","ActivityIndicator","text","weatherLower","toLowerCase","includes","icon","Math","round","recommendDress","ScrollView","pagingEnabled","horizontal","value","key","src","AntDesign","searchContainer","searchInput","buttonContainer","button","borderTopRightRadius","borderTopLeftRadius","selectedButton","buttonText","optionsContainer","flexWrap","borderBottomLeftRadius","borderBottomRightRadius","option","selectedOption","selectedItemsContainer","selectedItem","selectedItemText","popularContainer","popularTitle","popularItem","popularRank","popularName","Search","setKeyword","isStyleOpen","setIsStyleOpen","isCategoryOpen","setIsCategoryOpen","selectedStyles","setSelectedStyles","selectedCategories","setSelectedCategories","stylesList","categoryList","handleStyleOptionPress","selectedStyle","concat","handleCategoryOptionPress","selectedCategory","TextInput","onChangeText","returnKeyType","placeholder","blurOnSubmit","selectedItems","item","index","renderSelectedItems","getUserUid","_getUserUid","resolve","reject","onAuthStateChanged","user","getUserInfo","_getUserInfo","userInfo","getDoc","_x7","_getUserInfoByUid","updateUserInfo","_x5","_updateUserInfo","bio","userRef","Date","downloadURL","updateDoc","_getUserByImg","q","userPromises","_addProduct","condition","detail","numericPrice","parseInt","addDoc","_getProduct","productPromises","menuText","pic","position","deletePic","bottom","right","inputBox","labelBox","input","borderBottomColor","inputAreaBox","inputArea","checkbox","addTagBtn","modalContainer","modalInner","modalHeader","hr","modalItemContainer","modalItem","selectedModalItem","selectionText","maxSelectionText","footerLeft","detailIcon","priceBox","priceText","chatBtn","chatText","Add","setName","setPrice","setCondition","setSize","setDetail","setImage","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","styleModalVisible","setStyleModalVisible","_useState19","_useState20","categoryModalVisible","setCategoryModalVisible","_useState21","_useState22","isLoading","setIsLoading","checkboxStyles","fillColor","unfillColor","textStyle","conditionCheckboxGroup","_objectSpread","sizeCheckboxGroup","pickImage","result","ImagePicker","launchImageLibraryAsync","mediaTypes","allowsEditing","aspect","quality","canceled","assets","deleteImage","complete","_ref4","_x6","addProduct","setTimeout","handleStyleTagPress","handleCategoryTagPress","KeyboardAwareScrollView","keyboardType","BouncyCheckboxGroup","onChange","ICheckboxButton","Modal","animationType","transparent","visible","onRequestClose","multiline","header","borderBottomWidth","chatContainer","chatImage","chatInfoContainer","chatTitleContainer","chatTitle","chatName","chatLastMessage","_addChatRoom","seller","myInfo","sellerInfo","getUserInfoByUid","chatRoomData","productImage","productName","participant","participantName","_getChatRoom","chatRoomRef","chatRoom","_sendMsg","roomId","content","userName","messageRef","fromId","fromName","ChatRoom","chatRooms","setChatRooms","fetchUserName","fetchChatRoomData","getChatRoom","getOtherName","userList","find","FlatList","renderItem","other","numberOfLines","ellipsizeMode","keyExtractor","infoBox","userImage","gearIcon","top","storeInfo","bioBox","storeText","followBox","follow","followText","buttonBox","nonClickedButton","clickedButton","btnText","itemBox","Store","route","isSelling","setIsSelling","setUid","isMyStore","setIsMyStore","setSellerUid","sellerName","setSellerName","sellerImage","setSellerImage","sellerStyle","setSellerStyle","sellerBio","setSellerBio","sellingItem","setSellingItem","soldItem","fetchUserInfo","_route$params","myUid","params","_route$params2","_route$params3","getUserByImg","editable","Chat","messages","setMessages","inputText","setInputText","scrollViewRef","useRef","orderBy","onSnapshot","querySnapshot","msgs","getMsg","send","Keyboard","current","scrollToEnd","animated","sendMsg","goBackBtn","headerText","onContentSizeChange","chatInfo","messageContainer","myMessage","otherMessage","myMessageText","otherMessageText","KeyboardAvoidingView","behavior","Platform","undefined","inputContainer","onSubmitEditing","sendBtn","sendBtnText","goBackButtonText","textAlign","_signUp","email","pw","pwCheck","phone","address","createdUser","createUserWithEmailAndPassword","setDoc","code","_signIn","signInWithEmailAndPassword","form","btn","textContainer","signUpBtn","SignUp","setEmail","setPw","setPwCheck","setPhone","setAddress","secureTextEntry","signUp","_x10","signIn","nameBtn","logOutBtn","Info","setBio","_ref5","Alert","_onPress","signOut","Detail","setStyle","setCategory","setSeller","fetchProductInfo","productInfo","getProduct","conNum","obj","sizeNum","pressChatBtn","addChatRoom","initial","Products","products","setProducts","fetchProducts","productList","getProductsByKeyword","itemContainer","itemImg","itemName","itemPrice","App","Stack","createStackNavigator","NavigationContainer","Navigator","initialRouteName","screenOptions","headerShown","Screen","component","SignIn","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","t","mode","this","then","ns","create","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}